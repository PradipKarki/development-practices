{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Swagger"
  },
  "host": "example.com",
  "basePath": "/",
  "schemes": [
    "https",
    "http"
  ],
  "consumes": [],
  "produces": [],
  "tags": [
    {
      "name": "rfa-1abc"
    },
    {
      "name": "dictionaries"
    },
    {
      "name": "facilities"
    },
    {
      "name": "placement-homes"
    },
    {
      "name": "system-information"
    },
    {
      "name": "cross_report_agency"
    },
    {
      "name": "_allegations"
    },
    {
      "name": "investigations"
    },
    {
      "name": "_cmsreferrals"
    },
    {
      "name": "_allegationPerpetratorHistory"
    },
    {
      "name": "address_validation"
    },
    {
      "name": "cmsdocreferralclient"
    },
    {
      "name": "hoi_screenings"
    },
    {
      "name": "relationships"
    },
    {
      "name": "cms_ui_id"
    },
    {
      "name": "addresses"
    },
    {
      "name": "contacts"
    },
    {
      "name": "screenings"
    },
    {
      "name": "staffpersons"
    },
    {
      "name": "_clients"
    },
    {
      "name": "_longText"
    },
    {
      "name": "hoi_referrals"
    },
    {
      "name": "_assignments"
    },
    {
      "name": "referrals"
    },
    {
      "name": "lov"
    },
    {
      "name": "_referralClients"
    },
    {
      "name": "cms_ns_referrals"
    },
    {
      "name": "_crossReports"
    },
    {
      "name": "_drmsDocument"
    },
    {
      "name": "client_collaterals"
    },
    {
      "name": "people"
    },
    {
      "name": "cmsdocument"
    },
    {
      "name": "_staffpersons"
    },
    {
      "name": "dora"
    },
    {
      "name": "_reporters"
    },
    {
      "name": "_childClients"
    },
    {
      "name": "hoi_cases"
    },
    {
      "name": "_referrals"
    },
    {
      "name": "participants"
    },
    {
      "name": "forms-packages"
    },
    {
      "name": "forms-schemas"
    },
    {
      "name": "forms-instances"
    },
    {
      "name": "system-information"
    }
  ],
  "definitions": {
    "CountyDTO": {
      "type": "object",
      "required": [
        "id",
        "value"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "1",
          "description": "Dictionary Status Code"
        },
        "value": {
          "type": "string",
          "example": "Some dictionary item description",
          "description": "Dictionary Status Description"
        },
        "lis_code": {
          "type": "string",
          "example": "01",
          "description": "LIS (legacy) Dictionary Code",
          "readOnly": true
        }
      }
    },
    "Serializable": {
      "type": "object"
    },
    "AdoptionHistoryDTO": {
      "type": "object",
      "properties": {
        "foster_care_licenses_q1": {
          "$ref": "#/definitions/FosterCareLicensesQ1"
        },
        "applications_for_adoption_q2": {
          "$ref": "#/definitions/ApplicationsForAdoptionQ2"
        },
        "facility_operation_licenses_q3": {
          "$ref": "#/definitions/FacilityOperationLicensesQ3"
        },
        "employment_in_facilities_q4": {
          "$ref": "#/definitions/EmploymentInFacilitiesQ4"
        },
        "denial_history_q5": {
          "$ref": "#/definitions/DenialHistoryQ5"
        },
        "suspension_revocation_history_q6": {
          "$ref": "#/definitions/SuspensionRevocationHistoryQ6"
        },
        "was_subject_for_exclusion_order_q7": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "JsonNode": {
      "type": "object",
      "properties": {
        "array": {
          "type": "boolean",
          "default": false
        },
        "null": {
          "type": "boolean",
          "default": false
        },
        "valueNode": {
          "type": "boolean",
          "default": false
        },
        "object": {
          "type": "boolean",
          "default": false
        },
        "nodeType": {
          "type": "string",
          "enum": [
            "ARRAY",
            "BINARY",
            "BOOLEAN",
            "MISSING",
            "NULL",
            "NUMBER",
            "OBJECT",
            "POJO",
            "STRING"
          ]
        },
        "pojo": {
          "type": "boolean",
          "default": false
        },
        "number": {
          "type": "boolean",
          "default": false
        },
        "integralNumber": {
          "type": "boolean",
          "default": false
        },
        "floatingPointNumber": {
          "type": "boolean",
          "default": false
        },
        "containerNode": {
          "type": "boolean",
          "default": false
        },
        "missingNode": {
          "type": "boolean",
          "default": false
        },
        "short": {
          "type": "boolean",
          "default": false
        },
        "int": {
          "type": "boolean",
          "default": false
        },
        "long": {
          "type": "boolean",
          "default": false
        },
        "float": {
          "type": "boolean",
          "default": false
        },
        "double": {
          "type": "boolean",
          "default": false
        },
        "bigDecimal": {
          "type": "boolean",
          "default": false
        },
        "bigInteger": {
          "type": "boolean",
          "default": false
        },
        "textual": {
          "type": "boolean",
          "default": false
        },
        "boolean": {
          "type": "boolean",
          "default": false
        },
        "binary": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "NameType": {
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "FacilityDTO": {
      "type": "object",
      "required": [
        "addresses",
        "annual_visit_year",
        "capacity",
        "capacity_last_changed",
        "county",
        "facility_source",
        "href",
        "id",
        "license_effective_date",
        "license_number",
        "licensee_name",
        "name",
        "original_application_recieved_date",
        "phones",
        "prelicensing_visit_date",
        "status",
        "type",
        "visits"
      ],
      "properties": {
        "href": {
          "type": "string",
          "format": "uri",
          "example": "facilities/193600010",
          "description": "Link to current resource"
        },
        "id": {
          "type": "string",
          "example": "193600010",
          "description": "Facility ID"
        },
        "capacity_last_changed": {
          "type": "string",
          "format": "date",
          "example": "2000-01-01",
          "description": "yyyy-MM-dd"
        },
        "type": {
          "description": "Facility Type",
          "$ref": "#/definitions/FacilityTypeDTO"
        },
        "name": {
          "type": "string",
          "example": "LITTLE ROADRUNNERS INFANT CARE",
          "description": "Facility Name",
          "minLength": 0,
          "maxLength": 50
        },
        "licensee_name": {
          "type": "string",
          "example": "BROWN, KIMBERLY",
          "description": "Licensee Name",
          "minLength": 0,
          "maxLength": 50
        },
        "license_type": {
          "type": "string",
          "example": "A",
          "description": "Licensee Type"
        },
        "assigned_worker": {
          "description": "Assigned Worker",
          "$ref": "#/definitions/DictionaryDTO"
        },
        "district_office": {
          "example": "MISSION VALLEY",
          "description": "District Office",
          "$ref": "#/definitions/DistrictOfficeDTO"
        },
        "license_number": {
          "type": "string",
          "example": "193600161",
          "description": "License Number"
        },
        "status": {
          "description": "Facility Status",
          "$ref": "#/definitions/DictionaryDTO"
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "example": 10,
          "description": "Capacity"
        },
        "license_effective_date": {
          "type": "string",
          "format": "date",
          "example": "2000-01-01",
          "description": "yyyy-MM-dd"
        },
        "original_application_recieved_date": {
          "type": "string",
          "format": "date",
          "example": "2000-01-01",
          "description": "yyyy-MM-dd"
        },
        "last_visit_date": {
          "type": "string",
          "format": "date-time",
          "example": "2000-01-01 00:00:00",
          "description": "yyyy-MM-dd HH:mm:ss"
        },
        "last_deferred_visit_date": {
          "type": "string",
          "format": "date-time",
          "example": "2000-01-01 00:00:00",
          "description": "yyyy-MM-dd HH:mm:ss"
        },
        "email_address": {
          "type": "string",
          "example": "name@mail.com",
          "description": "Email Address",
          "minLength": 0,
          "maxLength": 50
        },
        "last_visit_reason": {
          "description": "Last Visit Reason",
          "$ref": "#/definitions/DictionaryDTO"
        },
        "last_deferred_visit_reason": {
          "description": "Last Deferred Visit Reason",
          "$ref": "#/definitions/DictionaryDTO"
        },
        "county": {
          "description": "County",
          "$ref": "#/definitions/CountyDTO"
        },
        "phones": {
          "type": "array",
          "description": "Facility Phones",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/PersonPhoneDTO"
          }
        },
        "addresses": {
          "type": "array",
          "description": "Facility Addresses",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/FacilityAddressDTO"
          }
        },
        "visits": {
          "type": "array",
          "description": "Facility Visits",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/FacilityVisitDTO"
          }
        },
        "annual_visit_year": {
          "type": "integer",
          "format": "int32",
          "description": "18",
          "readOnly": true
        },
        "prelicensing_visit_date": {
          "type": "string",
          "format": "date-time",
          "description": "2000-01-01 00:00:00",
          "readOnly": true
        },
        "facility_source": {
          "type": "string",
          "description": "Facility Source",
          "readOnly": true
        }
      }
    },
    "PacketDTO": {
      "type": "object",
      "properties": {
        "rfa1a_sections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SectionSummaryDTO"
          }
        },
        "applicants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersonSummaryDTO"
          }
        },
        "other_adults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersonSummaryDTO"
          }
        },
        "adult_children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersonSummaryDTO"
          }
        }
      }
    },
    "ReferencesDTO": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        }
      }
    },
    "FacilityDeficiencyDTO": {
      "type": "object",
      "properties": {
        "deficiency_type": {
          "type": "string"
        },
        "poc_date": {
          "type": "string",
          "format": "date-time"
        },
        "fac_section_violated": {
          "type": "string"
        },
        "deficiency": {
          "type": "string"
        },
        "correction_plan": {
          "type": "string"
        },
        "poc_date_cleared": {
          "type": "string",
          "format": "date-time"
        },
        "poc_comment": {
          "type": "string"
        }
      }
    },
    "RequestorInfoDTO": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Name",
          "$ref": "#/definitions/PersonNameDTO"
        },
        "phone": {
          "description": "Phone",
          "$ref": "#/definitions/PhoneDTO"
        },
        "fax": {
          "description": "Fax",
          "$ref": "#/definitions/PhoneDTO"
        },
        "email": {
          "type": "string",
          "description": "Email"
        }
      }
    },
    "AgeGroupType": {
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "FacilityAddressDTO": {
      "type": "object",
      "required": [
        "address",
        "type"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "type": "string",
          "example": "mail",
          "description": "Address Type",
          "readOnly": true
        },
        "address": {
          "description": "Address Object",
          "readOnly": true,
          "$ref": "#/definitions/AddressDTO"
        }
      }
    },
    "EmploymentInFacilitiesQ4": {
      "type": "object",
      "properties": {
        "was_employed_or_volunteered": {
          "type": "boolean",
          "default": false
        },
        "facilities": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DistrictOfficeDTO": {
      "type": "object",
      "required": [
        "name",
        "number"
      ],
      "properties": {
        "number": {
          "type": "string",
          "example": "21",
          "description": "District Office Number"
        },
        "name": {
          "type": "string",
          "example": "NO. CAL AC/SC",
          "description": "District Office Name"
        }
      }
    },
    "ApplicantsHistoryDTO": {
      "type": "object",
      "properties": {
        "former_spouses": {
          "type": "array",
          "description": "List of Former Spouses and Domestic Partners",
          "items": {
            "$ref": "#/definitions/FormerSpouseDTO"
          }
        },
        "adult_children": {
          "type": "array",
          "description": "List of Adult Children",
          "items": {
            "$ref": "#/definitions/AdultChildDTO"
          }
        }
      }
    },
    "SuspensionRevocationHistoryQ6": {
      "type": "object",
      "properties": {
        "had_suspensions_revocations": {
          "type": "boolean",
          "default": false
        },
        "agencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgencyDTO"
          }
        }
      }
    },
    "AdultChildDTO": {
      "type": "object",
      "properties": {
        "name_prefix": {
          "description": "Prefix",
          "$ref": "#/definitions/NamePrefixType"
        },
        "first_name": {
          "type": "string",
          "example": "Andrew",
          "description": "First Name"
        },
        "middle_name": {
          "type": "string",
          "description": "Middle Name"
        },
        "last_name": {
          "type": "string",
          "example": "Pollen",
          "description": "Last Name"
        },
        "name_suffix": {
          "description": "Suffix",
          "$ref": "#/definitions/NameSuffixType"
        },
        "relationship_to_applicants": {
          "type": "array",
          "description": "Relationship to Applicants",
          "items": {
            "$ref": "#/definitions/RelationshipToApplicantDTO"
          }
        },
        "lives_in_home": {
          "type": "boolean",
          "example": false,
          "description": "Is adult child lives in the home?",
          "default": false
        },
        "phone": {
          "description": "Adult Child phone number",
          "$ref": "#/definitions/PhoneDTO"
        },
        "address": {
          "description": "Adult Child address",
          "$ref": "#/definitions/RFAAddressDTO"
        }
      }
    },
    "RelationshipToApplicantDTO": {
      "type": "object",
      "properties": {
        "relationship_to_applicant_freeform": {
          "type": "string",
          "example": "Child",
          "description": "Relationship to Applicant free form"
        },
        "applicant_id": {
          "type": "integer",
          "format": "int64",
          "example": 1234567,
          "description": "Applicant Id"
        },
        "relationship_to_applicant": {
          "description": "Relationship to Applicant",
          "$ref": "#/definitions/RelationshipToApplicantType"
        }
      }
    },
    "BaseDictionary": {
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "primaryKey": {
          "$ref": "#/definitions/Serializable"
        }
      }
    },
    "FosterCareLicensesQ1": {
      "type": "object",
      "properties": {
        "was_previously_licensed": {
          "type": "boolean",
          "default": false
        },
        "agencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgencyDTO"
          }
        }
      }
    },
    "PersonNameDTO": {
      "type": "object",
      "properties": {
        "name_prefix": {
          "description": "Prefix",
          "$ref": "#/definitions/NamePrefixType"
        },
        "first_name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "middle_name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "last_name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 25
        },
        "name_suffix": {
          "description": "Suffix",
          "$ref": "#/definitions/NameSuffixType"
        }
      }
    },
    "PhoneDTO": {
      "type": "object",
      "required": [
        "phone_type"
      ],
      "properties": {
        "phone_type": {
          "$ref": "#/definitions/PhoneNumberType"
        },
        "number": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^\\d*"
        },
        "extension": {
          "type": "string",
          "minLength": 0,
          "maxLength": 7,
          "pattern": "^\\d*"
        },
        "preferred": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "ApplicantRelationshipType": {
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "DictionaryDTO": {
      "type": "object",
      "required": [
        "id",
        "value"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "1",
          "description": "Dictionary Status Code"
        },
        "value": {
          "type": "string",
          "example": "Some dictionary item description",
          "description": "Dictionary Status Description"
        }
      }
    },
    "ApplicationsForAdoptionQ2": {
      "type": "object",
      "properties": {
        "have_applied_for_adoption": {
          "type": "boolean",
          "default": false
        },
        "facilities": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "FacilityVisitDTO": {
      "type": "object",
      "properties": {
        "approval": {
          "type": "string",
          "example": "Approved",
          "description": "Approval"
        },
        "visit_type": {
          "type": "string",
          "example": "Renewal",
          "description": "VisitType"
        },
        "visit_date": {
          "type": "string",
          "format": "date-time",
          "example": "2000-01-01",
          "description": "yyyy-MM-dd"
        },
        "visit_deferred_date": {
          "type": "string",
          "format": "date-time",
          "example": "2000-01-01",
          "description": "yyyy-MM-dd"
        }
      }
    },
    "DisclosureDTO": {
      "type": "object",
      "properties": {
        "offense": {
          "type": "string",
          "example": "Offence description"
        },
        "offense_city": {
          "type": "string",
          "example": "Sacramento"
        },
        "offense_state": {
          "$ref": "#/definitions/StateType"
        },
        "offense_date": {
          "type": "string",
          "format": "date",
          "example": "2014-12-26"
        },
        "when_offense_happen": {
          "type": "string",
          "description": "When did offense happen"
        },
        "offense_details": {
          "type": "string",
          "example": "More details about offence"
        },
        "signature": {
          "type": "string",
          "example": "Anna Peterson"
        },
        "application_date": {
          "type": "string",
          "format": "date",
          "example": "2017-07-02"
        }
      }
    },
    "TypedPersonNameDTO": {
      "type": "object",
      "properties": {
        "name_prefix": {
          "description": "Prefix",
          "$ref": "#/definitions/NamePrefixType"
        },
        "first_name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "middle_name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "last_name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 25
        },
        "name_suffix": {
          "description": "Suffix",
          "$ref": "#/definitions/NameSuffixType"
        },
        "name_type": {
          "$ref": "#/definitions/NameType"
        }
      }
    },
    "RFA1aFormDTO": {
      "type": "object",
      "properties": {
        "other_type_description": {
          "type": "string",
          "example": "Description",
          "description": "Other Type Description"
        },
        "application_county": {
          "description": "County Type",
          "$ref": "#/definitions/CountyType"
        },
        "is_initial_application": {
          "type": "boolean",
          "example": false,
          "description": "Is Initial Application Id",
          "default": false
        }
      }
    },
    "RFA1bFormCollectionDTO": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/RFA1bFormDTO"
          }
        }
      }
    },
    "StackTraceElement": {
      "type": "object",
      "properties": {
        "methodName": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "lineNumber": {
          "type": "integer",
          "format": "int32"
        },
        "className": {
          "type": "string"
        },
        "nativeMethod": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "ResidenceDTO": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "array",
          "description": "List of Addresses",
          "items": {
            "$ref": "#/definitions/RFAAddressDTO"
          }
        },
        "physical_mailing_similar": {
          "type": "boolean",
          "example": false,
          "description": "Is Physical Mailing Similar",
          "default": false
        },
        "residence_ownership": {
          "description": "Residence Ownership Type",
          "$ref": "#/definitions/ResidenceOwnershipType"
        },
        "weapon_in_home": {
          "type": "boolean",
          "example": false,
          "description": "Is Weapon In Home",
          "default": false
        },
        "body_of_water_exist": {
          "type": "boolean",
          "example": true,
          "description": "Is Body Of Water Exist",
          "default": false
        },
        "body_of_water_description": {
          "type": "string",
          "example": "Description here",
          "description": "Body Of Water Description"
        },
        "others_using_residence_as_mailing": {
          "type": "boolean",
          "example": true,
          "description": "Is Others Using Residence As Mailing",
          "default": false
        },
        "other_people_using_residence_as_mailing": {
          "type": "array",
          "description": "Other People Using Residence As Mailing",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/PersonNameDTO"
          }
        },
        "directions_to_home": {
          "type": "string",
          "example": "Directions here",
          "description": "Directions To Home"
        },
        "home_languages": {
          "type": "array",
          "description": "Home Languages",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/LanguageType"
          }
        }
      }
    },
    "ApplicantCollectionDTO": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ApplicantDTO"
          }
        }
      }
    },
    "AgencyDTO": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/LicenseType"
        }
      }
    },
    "StateType": {
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "id": {
          "type": "string"
        }
      }
    },
    "SchoolGradeType": {
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "DictionaryValuesDTO": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/BaseDictionary"
          }
        }
      }
    },
    "OtherAdultCollectionDTO": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/OtherAdultDTO"
          }
        }
      }
    },
    "ApplicantSignature": {
      "type": "object",
      "properties": {
        "applicant_id": {
          "type": "integer",
          "format": "int64",
          "description": "Applicant Id"
        },
        "signature_city": {
          "type": "string",
          "description": "City of signature"
        },
        "signature_county": {
          "description": "County of signature",
          "$ref": "#/definitions/CountyType"
        },
        "signature_date": {
          "type": "string",
          "format": "date",
          "example": "2015-03-25",
          "description": "Date of signature"
        }
      }
    },
    "FormsPackageDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "external_entity_id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "form_instances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormInstanceDTO"
          }
        }
      }
    },
    "IncomeType": {
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "SignaturesDTO": {
      "type": "object",
      "properties": {
        "signature_of_applicant": {
          "type": "string"
        },
        "sign_date_of_applicants": {
          "type": "string",
          "format": "date"
        },
        "signature_of_witness": {
          "type": "string"
        },
        "sign_date_of_witness": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "PersonDTO": {
      "type": "object",
      "required": [
        "first_name",
        "last_name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "gender": {
          "type": "string"
        },
        "age": {
          "type": "integer",
          "format": "int32"
        },
        "ssn": {
          "type": "string"
        },
        "ethnicityId": {
          "type": "integer",
          "format": "int64"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "date_of_birth": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "Reference": {
      "type": "object",
      "properties": {
        "name_prefix": {
          "description": "Prefix",
          "$ref": "#/definitions/NamePrefixType"
        },
        "first_name": {
          "type": "string"
        },
        "middle_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "name_suffix": {
          "description": "Suffix",
          "$ref": "#/definitions/NameSuffixType"
        },
        "mailing_address": {
          "$ref": "#/definitions/RFAAddressDTO"
        },
        "phone_number": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "RFAApplicationStatusDTO": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "DRAFT",
            "IN_PROGRESS",
            "SUBMITTED"
          ]
        }
      }
    },
    "GenderType": {
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "PhoneNumberType": {
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "LIC198bFormDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "requestor_info": {
          "description": "Requestor information",
          "$ref": "#/definitions/RequestorInfoDTO"
        },
        "identifying_data": {
          "description": "Identifying data",
          "$ref": "#/definitions/IdentifyingDataDTO"
        },
        "last_five_years_addresses": {
          "type": "array",
          "description": "Addresses for past 5 years",
          "items": {
            "$ref": "#/definitions/PhysicalAddressDTO"
          }
        },
        "has_been_perpetrator": {
          "type": "boolean",
          "description": "Have you ever been substantiated as a perpetrator in any child abuse or neglect report in this state or any state?",
          "default": false
        },
        "perpetration_episodes": {
          "type": "array",
          "description": "Circumstances",
          "items": {
            "$ref": "#/definitions/PerpetrationEpisodeDTO"
          }
        },
        "signatures": {
          "description": "Signatures",
          "$ref": "#/definitions/SignaturesDTO"
        },
        "responding_state": {
          "description": "Responding State",
          "$ref": "#/definitions/RespondingStateDTO"
        }
      }
    },
    "MinorChildDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "relationship_to_applicants": {
          "type": "array",
          "description": "Relationship to Applicants",
          "items": {
            "$ref": "#/definitions/RelationshipToApplicantDTO"
          }
        },
        "other_relative": {
          "type": "boolean",
          "default": false
        },
        "other_relative_name_prefix": {
          "description": "Other Relative Prefix",
          "$ref": "#/definitions/NamePrefixType"
        },
        "other_relative_first_name": {
          "type": "string"
        },
        "other_relative_middle_name": {
          "type": "string"
        },
        "other_relative_last_name": {
          "type": "string"
        },
        "other_relative_name_suffix": {
          "description": "Suffix",
          "$ref": "#/definitions/NameSuffixType"
        },
        "date_of_birth": {
          "type": "string",
          "format": "date"
        },
        "gender": {
          "$ref": "#/definitions/GenderType"
        },
        "child_financially_supported": {
          "type": "boolean",
          "default": false
        },
        "child_adopted": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "AddressType": {
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "FacilityInspectionsDTO": {
      "type": "object",
      "properties": {
        "inspections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FacilityInspectionDTO"
          }
        }
      }
    },
    "PersonPhoneDTO": {
      "type": "object",
      "required": [
        "number"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "relation": {
          "type": "string",
          "example": "Alternative",
          "description": "Phone Relation"
        },
        "type": {
          "type": "string",
          "example": "Cell",
          "description": "Phone type"
        },
        "number": {
          "type": "string",
          "example": "(494) 823-8588",
          "description": "Phone number",
          "minLength": 0,
          "maxLength": 16
        }
      }
    },
    "ReportDTO": {
      "type": "object",
      "properties": {
        "report_date": {
          "type": "string",
          "format": "date",
          "description": "Report date"
        },
        "report_number": {
          "type": "string",
          "description": "Report number"
        },
        "local_contact": {
          "description": "Local contact",
          "$ref": "#/definitions/PersonNameDTO"
        },
        "phone": {
          "description": "Phone",
          "$ref": "#/definitions/PhoneDTO"
        }
      }
    },
    "RespondingStateDTO": {
      "type": "object",
      "properties": {
        "reports": {
          "type": "array",
          "description": "Reports",
          "items": {
            "$ref": "#/definitions/ReportDTO"
          }
        },
        "contact_name": {
          "description": "Contact name",
          "$ref": "#/definitions/PersonNameDTO"
        },
        "agency": {
          "type": "string",
          "description": "Agency"
        },
        "phone": {
          "description": "Phone",
          "$ref": "#/definitions/PhoneDTO"
        },
        "email": {
          "type": "string",
          "description": "Email"
        }
      }
    },
    "PerpetrationEpisodeDTO": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "date",
          "description": "Date"
        },
        "city": {
          "type": "string",
          "description": "City"
        },
        "state": {
          "description": "State",
          "$ref": "#/definitions/StateType"
        },
        "county": {
          "type": "string",
          "description": "County"
        },
        "circumstances": {
          "type": "string",
          "description": "Circumstances"
        }
      }
    },
    "EmploymentDTO": {
      "type": "object",
      "properties": {
        "employer_name": {
          "type": "string"
        },
        "occupation": {
          "type": "string"
        },
        "income": {
          "type": "number"
        },
        "income_type": {
          "$ref": "#/definitions/IncomeType"
        },
        "physical_address": {
          "$ref": "#/definitions/PhysicalAddressDTO"
        }
      }
    },
    "HealthCheckResultDTO": {
      "type": "object",
      "properties": {
        "healthy": {
          "type": "boolean",
          "default": false
        },
        "message": {
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/Throwable"
        },
        "details": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "timestamp": {
          "type": "string"
        }
      }
    },
    "FacilityChildrenDTO": {
      "type": "object",
      "properties": {
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FacilityChildDTO"
          }
        }
      }
    },
    "NameSuffixType": {
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "EthnicityType": {
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "AddressDTO": {
      "type": "object",
      "required": [
        "city",
        "state",
        "street_address",
        "zip_code"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "longitude": {
          "type": "number"
        },
        "lattitude": {
          "type": "number"
        },
        "deliverable": {
          "type": "boolean",
          "default": false
        },
        "street_address": {
          "type": "string",
          "example": "609 WOODSMAN DR",
          "description": "Street Address",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 100
        },
        "city": {
          "type": "string",
          "example": "BAKERSFIELD",
          "description": "City",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 50
        },
        "state": {
          "type": "string",
          "example": "CA",
          "description": "State",
          "readOnly": true,
          "minLength": 2,
          "maxLength": 2
        },
        "zip_code": {
          "type": "string",
          "example": "93306",
          "description": "Zipcode",
          "readOnly": true,
          "minLength": 5,
          "maxLength": 5
        },
        "zip_suffix_code": {
          "type": "string",
          "minLength": 4,
          "maxLength": 4
        }
      }
    },
    "SystemInformationDTO": {
      "type": "object",
      "properties": {
        "application": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "build_number": {
          "type": "string"
        },
        "calsns": {
          "$ref": "#/definitions/HealthCheckResultDTO"
        },
        "cwscms": {
          "$ref": "#/definitions/HealthCheckResultDTO"
        },
        "fas": {
          "$ref": "#/definitions/HealthCheckResultDTO"
        },
        "lis": {
          "$ref": "#/definitions/HealthCheckResultDTO"
        },
        "deadlocks": {
          "$ref": "#/definitions/HealthCheckResultDTO"
        }
      }
    },
    "FacilityChildDTO": {
      "type": "object",
      "required": [
        "county_of_origin"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "facilityId": {
          "type": "integer",
          "format": "int64"
        },
        "person": {
          "$ref": "#/definitions/PersonDTO"
        },
        "date_of_placement": {
          "type": "string",
          "format": "date"
        },
        "assigned_worker": {
          "$ref": "#/definitions/PersonDTO"
        },
        "county_of_origin": {
          "type": "string"
        }
      }
    },
    "FacilityOperationLicensesQ3": {
      "type": "object",
      "properties": {
        "was_previously_licensed": {
          "type": "boolean",
          "default": false
        },
        "agencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgencyDTO"
          }
        }
      }
    },
    "LIC198bFormCollectionDTO": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/LIC198bFormDTO"
          }
        }
      }
    },
    "ResidenceOwnershipType": {
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Throwable": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "localizedMessage": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "CountyType": {
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApplicantsDeclarationDTO": {
      "type": "object",
      "properties": {
        "applicant_signatures": {
          "type": "array",
          "description": "List of applicant's signatures",
          "items": {
            "$ref": "#/definitions/ApplicantSignature"
          }
        }
      }
    },
    "PersonSummaryDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "rfa1b_id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "FormerSpouseDTO": {
      "type": "object",
      "properties": {
        "relationship_type": {
          "description": "Relationship Type",
          "$ref": "#/definitions/ApplicantRelationshipType"
        },
        "applicant_id": {
          "type": "integer",
          "format": "int64",
          "example": 1234567,
          "description": "Applicant Id"
        },
        "name_prefix": {
          "description": "Prefix",
          "$ref": "#/definitions/NamePrefixType"
        },
        "first_name": {
          "type": "string",
          "example": "Anna",
          "description": "First Name"
        },
        "middle_name": {
          "type": "string",
          "example": "L.",
          "description": "Middle Name"
        },
        "last_name": {
          "type": "string",
          "example": "Pollen",
          "description": "Last Name"
        },
        "name_suffix": {
          "description": "Suffix",
          "$ref": "#/definitions/NameSuffixType"
        },
        "date_of_marriage": {
          "type": "string",
          "format": "date",
          "example": "2016-12-26",
          "description": "Marriage/Domestic partnership date"
        },
        "place_of_marriage_city": {
          "type": "string",
          "example": "Sacramento",
          "description": "Marriage/Domestic partnership place: city"
        },
        "place_of_marriage_state": {
          "description": "Marriage/Domestic partnership place: state",
          "$ref": "#/definitions/StateType"
        },
        "marriage_termination_reason": {
          "description": "Divorce/Domestic Partnership Termination reason",
          "$ref": "#/definitions/MarriageTerminationReasonType"
        },
        "date_of_marriage_end": {
          "type": "string",
          "format": "date",
          "example": "2016-12-26",
          "description": "Divorce/Domestic Partnership Termination Date"
        },
        "place_of_marriage_end_city": {
          "type": "string",
          "example": "Sacramento",
          "description": "Divorce/Domestic Partnership Termination City"
        },
        "place_of_marriage_end_state": {
          "description": "Divorce/Domestic Partnership Termination State",
          "$ref": "#/definitions/StateType"
        }
      }
    },
    "FormInstanceDTO": {
      "type": "object",
      "required": [
        "content",
        "name",
        "schema_version"
      ],
      "properties": {
        "form_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "schema_version": {
          "type": "string"
        },
        "parent_form_id": {
          "type": "integer",
          "format": "int64"
        },
        "parent_form_name": {
          "type": "string"
        },
        "package_id": {
          "type": "integer",
          "format": "int64"
        },
        "content": {
          "$ref": "#/definitions/JsonNode"
        }
      }
    },
    "RFA1bFormDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "application_county": {
          "$ref": "#/definitions/CountyType"
        },
        "lived_in_other_state": {
          "type": "boolean",
          "example": true,
          "default": false
        },
        "other_states_of_living": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StateType"
          }
        },
        "convicted_in_california": {
          "type": "boolean",
          "example": false,
          "default": false
        },
        "convicted_in_another_state": {
          "type": "boolean",
          "example": false,
          "default": false
        },
        "arrested_for_crime": {
          "type": "boolean",
          "example": false,
          "default": false
        },
        "resource_family_name": {
          "type": "string",
          "example": "Peterson"
        },
        "applicant_name_prefix": {
          "description": "Prefix",
          "$ref": "#/definitions/NamePrefixType"
        },
        "applicant_first_name": {
          "type": "string",
          "example": "Anna"
        },
        "applicant_middle_name": {
          "type": "string",
          "example": "M."
        },
        "applicant_last_name": {
          "type": "string",
          "example": "Peterson"
        },
        "applicant_name_suffix": {
          "description": "Suffix",
          "$ref": "#/definitions/NameSuffixType"
        },
        "residence_address": {
          "$ref": "#/definitions/RFAAddressDTO"
        },
        "ssn": {
          "type": "string",
          "example": "464942323"
        },
        "date_of_birth": {
          "type": "string",
          "format": "date",
          "example": "1981-12-26"
        },
        "driver_license": {
          "type": "string",
          "example": "MD123-1234-585-121"
        },
        "driver_license_state": {
          "$ref": "#/definitions/StateType"
        },
        "signature": {
          "type": "string",
          "example": "Anna Peterson"
        },
        "application_date": {
          "type": "string",
          "format": "date",
          "example": "2017-07-02"
        },
        "convicted_in_california_disclosures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DisclosureDTO"
          }
        },
        "convicted_in_another_state_disclosures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DisclosureDTO"
          }
        },
        "arrested_for_crime_disclosures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DisclosureDTO"
          }
        }
      }
    },
    "RFA1aFormCollectionDTO": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/RFA1aFormDTO"
          }
        }
      }
    },
    "RFA1cFormDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "application_county": {
          "$ref": "#/definitions/CountyType"
        },
        "child_identified": {
          "type": "boolean",
          "example": true,
          "default": false
        },
        "identified_children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentifiedChildDTO"
          }
        }
      }
    },
    "FacilityInspectionDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "href": {
          "type": "string"
        },
        "representative_signature_date": {
          "type": "string",
          "format": "date-time"
        },
        "deficiencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FacilityDeficiencyDTO"
          }
        }
      }
    },
    "RaceType": {
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ComplaintsDTO": {
      "type": "object",
      "properties": {
        "complaints": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/ComplaintDTO"
          }
        }
      }
    },
    "ApplicantDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name_prefix": {
          "description": "Prefix",
          "$ref": "#/definitions/NamePrefixType"
        },
        "first_name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "middle_name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "last_name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 25
        },
        "name_suffix": {
          "description": "Suffix",
          "$ref": "#/definitions/NameSuffixType"
        },
        "other_names": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TypedPersonNameDTO"
          }
        },
        "highest_education_level": {
          "$ref": "#/definitions/EducationLevelType"
        },
        "date_of_birth": {
          "type": "string",
          "format": "date"
        },
        "gender": {
          "$ref": "#/definitions/GenderType"
        },
        "race": {
          "$ref": "#/definitions/RaceType"
        },
        "ethnicity": {
          "$ref": "#/definitions/EthnicityType"
        },
        "Driver's License Number": {
          "type": "string",
          "example": "AS123456789012345678",
          "minLength": 0,
          "maxLength": 20,
          "pattern": "^[A-Za-z0-9]*$"
        },
        "driver_license_state": {
          "$ref": "#/definitions/StateType"
        },
        "email": {
          "type": "string"
        },
        "employment": {
          "$ref": "#/definitions/EmploymentDTO"
        },
        "phones": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhoneDTO"
          }
        }
      }
    },
    "LanguageType": {
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "LicenseType": {
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RelationshipToApplicantType": {
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "MarriageTerminationReasonType": {
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "AllegationDTO": {
      "type": "object",
      "properties": {
        "complaint_code": {
          "type": "string"
        },
        "allegation": {
          "type": "string"
        },
        "resolution_code_sub": {
          "type": "string"
        },
        "resolution_code_insub": {
          "type": "string"
        },
        "resolution_code_unsub": {
          "type": "string"
        }
      }
    },
    "ComplaintDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "complaint_date": {
          "type": "string",
          "format": "date-time",
          "example": "2000-01-01 00:00:00",
          "description": "yyyy-MM-dd HH:mm:ss"
        },
        "assigned_worker": {
          "type": "string"
        },
        "control_number": {
          "type": "string"
        },
        "priority_level": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "approval_date": {
          "type": "string",
          "format": "date-time",
          "example": "2000-01-01 00:00:00",
          "description": "yyyy-MM-dd HH:mm:ss"
        },
        "pre_investigation_comments": {
          "type": "string"
        },
        "post_investigation_comments": {
          "type": "string"
        },
        "contact_summary": {
          "type": "string"
        },
        "followup_comments": {
          "type": "string"
        },
        "allegations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AllegationDTO"
          }
        }
      }
    },
    "EducationLevelType": {
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "SiblingGroupType": {
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RFAAddressDTO": {
      "type": "object",
      "properties": {
        "street_address": {
          "type": "string",
          "example": "1702 Redoak Ct.",
          "description": "Street Address"
        },
        "zip": {
          "type": "string",
          "example": "98123",
          "description": "zip"
        },
        "zip_extension": {
          "type": "string",
          "example": "123",
          "description": "Zip Extension"
        },
        "city": {
          "type": "string",
          "example": "Rocklin",
          "description": "City"
        },
        "state": {
          "description": "State Type",
          "$ref": "#/definitions/StateType"
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "example": -121.25118
        },
        "lattitude": {
          "type": "number",
          "format": "double",
          "example": 38.74037
        },
        "deliverable": {
          "type": "boolean",
          "example": true,
          "default": false
        },
        "type": {
          "description": "Address Type",
          "$ref": "#/definitions/AddressType"
        }
      }
    },
    "OtherAdultDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name_prefix": {
          "description": "Prefix",
          "$ref": "#/definitions/NamePrefixType"
        },
        "first_name": {
          "type": "string",
          "example": "Anna",
          "description": "First Name"
        },
        "middle_name": {
          "type": "string",
          "example": "L.",
          "description": "Middle Name"
        },
        "last_name": {
          "type": "string",
          "example": "Pollen",
          "description": "Last Name"
        },
        "name_suffix": {
          "description": "Suffix",
          "$ref": "#/definitions/NameSuffixType"
        },
        "date_of_birth": {
          "type": "string",
          "format": "date",
          "example": "1995-07-14",
          "description": "Date of Birth"
        },
        "relationship_to_applicants": {
          "type": "array",
          "description": "Relationship to Applicants",
          "items": {
            "$ref": "#/definitions/RelationshipToApplicantDTO"
          }
        }
      }
    },
    "PhysicalAddressDTO": {
      "type": "object",
      "properties": {
        "street_address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/StateType"
        },
        "zip": {
          "type": "string"
        }
      }
    },
    "ChildDesiredDTO": {
      "type": "object",
      "properties": {
        "child_identified": {
          "type": "boolean",
          "example": false,
          "description": "Has a child been identified?",
          "default": false
        },
        "child_in_home": {
          "type": "boolean",
          "example": false,
          "description": "Is the child currently in your home?",
          "default": false
        },
        "preferred_ages": {
          "type": "array",
          "description": "Preferred Age(s)",
          "items": {
            "$ref": "#/definitions/AgeGroupType"
          }
        },
        "preferred_sibling_group_up_to": {
          "description": "Preferred Sibling(Group Of)",
          "$ref": "#/definitions/SiblingGroupType"
        }
      }
    },
    "IdentifiedChildDTO": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string",
          "example": "Collin"
        },
        "middle_name": {
          "type": "string",
          "example": "P."
        },
        "last_name": {
          "type": "string",
          "example": "Martin"
        },
        "name_suffix": {
          "description": "Suffix",
          "$ref": "#/definitions/NameSuffixType"
        },
        "date_of_birth": {
          "type": "string",
          "format": "date",
          "example": "2007-07-14"
        },
        "gender": {
          "$ref": "#/definitions/GenderType"
        },
        "county_of_jurisdiction": {
          "$ref": "#/definitions/CountyType"
        },
        "date_of_placement": {
          "type": "string",
          "format": "date",
          "example": "2017-05-14"
        },
        "relationship_to_applicants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelationshipToApplicantDTO"
          }
        },
        "school_grade": {
          "$ref": "#/definitions/SchoolGradeType"
        },
        "school_name": {
          "type": "string",
          "example": "White Oaks High"
        },
        "school_address": {
          "$ref": "#/definitions/RFAAddressDTO"
        },
        "child_in_home": {
          "type": "boolean",
          "example": true,
          "default": false
        }
      }
    },
    "DenialHistoryQ5": {
      "type": "object",
      "properties": {
        "had_denials": {
          "type": "boolean",
          "default": false
        },
        "agencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgencyDTO"
          }
        }
      }
    },
    "NamePrefixType": {
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "MinorChildrenCollectionDTO": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/MinorChildDTO"
          }
        }
      }
    },
    "FacilityTypeDTO": {
      "type": "object",
      "required": [
        "id",
        "value"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "1",
          "description": "Dictionary Status Code"
        },
        "value": {
          "type": "string",
          "example": "Some dictionary item description",
          "description": "Dictionary Status Description"
        }
      }
    },
    "ApplicantsRelationshipDTO": {
      "type": "object",
      "properties": {
        "relationship_type": {
          "description": "Relationship between applicants",
          "$ref": "#/definitions/ApplicantRelationshipType"
        },
        "other_relationship": {
          "type": "string",
          "description": "Other type of relationship if it's not in the list"
        },
        "date_of_relationship": {
          "type": "string",
          "format": "date",
          "example": "2015-03-25",
          "description": "Date of current marriage/Domestic partnership"
        },
        "place_of_relationship_city": {
          "type": "string",
          "example": "Sacramento",
          "description": "Place of current marriage/Domestic partnership: city"
        },
        "place_of_relationship_state": {
          "description": "Place of current marriage/Domestic partnership: state",
          "$ref": "#/definitions/StateType"
        }
      }
    },
    "SectionSummaryDTO": {
      "type": "object",
      "properties": {
        "section": {
          "type": "string"
        },
        "filled": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "IdentifyingDataDTO": {
      "type": "object",
      "properties": {
        "person_name": {
          "description": "Applicant's name",
          "$ref": "#/definitions/PersonNameDTO"
        },
        "other_names": {
          "type": "array",
          "description": "Applicant's other names",
          "items": {
            "$ref": "#/definitions/TypedPersonNameDTO"
          }
        },
        "phone_number": {
          "description": "Phone number",
          "$ref": "#/definitions/PhoneDTO"
        },
        "email": {
          "type": "string",
          "description": "Email"
        },
        "date_of_birth": {
          "type": "string",
          "format": "date",
          "description": "Date of birth"
        },
        "state_of_birth": {
          "description": "State of birth",
          "$ref": "#/definitions/StateType"
        },
        "gender": {
          "description": "Gender",
          "$ref": "#/definitions/GenderType"
        },
        "race": {
          "description": "Race",
          "$ref": "#/definitions/RaceType"
        },
        "ethnicity": {
          "description": "Ethnicity",
          "$ref": "#/definitions/EthnicityType"
        },
        "ssn": {
          "type": "string",
          "example": "999999999",
          "description": "Social Security Number"
        },
        "driver_license_number": {
          "type": "string",
          "example": "AS123456789012345678",
          "description": "Driver's License Number",
          "minLength": 0,
          "maxLength": 20,
          "pattern": "^[A-Za-z0-9]*$"
        },
        "driver_license_state": {
          "description": "Driver's License State",
          "$ref": "#/definitions/StateType"
        }
      }
    },
    "PostedClientRelationship": {
      "type": "object",
      "required": [
        "absentParentCode",
        "clientRelationshipType",
        "primaryClientId",
        "sameHomeCode",
        "secondaryClientId"
      ],
      "properties": {
        "absentParentCode": {
          "type": "string",
          "example": "N",
          "minLength": 1,
          "maxLength": 1
        },
        "clientRelationshipType": {
          "type": "integer",
          "format": "int32",
          "example": 179
        },
        "secondaryClientId": {
          "type": "string",
          "example": "ABC123",
          "minLength": 1,
          "maxLength": 10
        },
        "primaryClientId": {
          "type": "string",
          "example": "DEF123",
          "minLength": 1,
          "maxLength": 10
        },
        "sameHomeCode": {
          "type": "string",
          "example": "Y",
          "minLength": 1,
          "maxLength": 1
        },
        "endDate": {
          "type": "string",
          "example": "2000-01-01",
          "description": "yyyy-MM-dd",
          "readOnly": true
        },
        "startDate": {
          "type": "string",
          "example": "2000-01-01",
          "description": "yyyy-MM-dd",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AllegationSubType": {
      "type": "object",
      "required": [
        "injury_harm_type"
      ],
      "properties": {
        "injury_harm_type": {
          "type": "integer",
          "format": "int32",
          "example": 1372,
          "description": "Injury/Harm Type",
          "readOnly": true
        },
        "injury_harm_sub_type": {
          "type": "integer",
          "format": "int32",
          "description": "Injury/Harm sub-type",
          "readOnly": true
        }
      }
    },
    "Address": {
      "type": "object",
      "required": [
        "city",
        "emergencyExtension",
        "emergencyNumber",
        "frgAdrtB"
      ],
      "properties": {
        "lastUpdatedTime": {
          "type": "string",
          "format": "date-time",
          "example": "2004-03-31T09:45:58.000-0800",
          "description": "Last Updated Time"
        },
        "existingAddressId": {
          "type": "string",
          "example": "ABC1234567",
          "minLength": 0,
          "maxLength": 10
        },
        "city": {
          "type": "string",
          "example": "Springfield",
          "minLength": 0,
          "maxLength": 20
        },
        "emergencyNumber": {
          "type": "integer",
          "format": "int64",
          "example": 1112223333
        },
        "emergencyExtension": {
          "type": "integer",
          "format": "int32",
          "example": 1112
        },
        "frgAdrtB": {
          "type": "boolean",
          "default": false
        },
        "governmentEntityCd": {
          "type": "integer",
          "format": "int32",
          "example": 1104
        },
        "messageNumber": {
          "type": "integer",
          "format": "int64",
          "example": 1112223333
        },
        "messageExtension": {
          "type": "integer",
          "format": "int32",
          "example": 1112
        },
        "headerAddress": {
          "type": "string",
          "example": "Senior Residence",
          "minLength": 0,
          "maxLength": 35
        },
        "primaryNumber": {
          "type": "integer",
          "format": "int64",
          "example": 1112223333
        },
        "primaryExtension": {
          "type": "integer",
          "format": "int32",
          "example": 1112
        },
        "state": {
          "type": "integer",
          "format": "int32",
          "example": 1828
        },
        "streetName": {
          "type": "string",
          "example": "Evergreen Terrace",
          "minLength": 0,
          "maxLength": 40
        },
        "streetNumber": {
          "type": "string",
          "example": "450A",
          "minLength": 0,
          "maxLength": 10
        },
        "zip": {
          "type": "integer",
          "format": "int32",
          "example": 65258
        },
        "addressDescription": {
          "type": "string",
          "example": "Third Street on the left",
          "minLength": 0,
          "maxLength": 120
        },
        "zip4": {
          "type": "integer",
          "format": "int32",
          "example": 6525
        },
        "postDirCd": {
          "type": "string",
          "example": "NE",
          "minLength": 0,
          "maxLength": 2
        },
        "preDirCd": {
          "type": "string",
          "example": "NE",
          "minLength": 0,
          "maxLength": 2
        },
        "streetSuffixCd": {
          "type": "integer",
          "format": "int32",
          "example": 1882
        },
        "unitDesignationCd": {
          "type": "integer",
          "format": "int32",
          "example": 2065
        },
        "unitNumber": {
          "type": "string",
          "example": "180",
          "minLength": 0,
          "maxLength": 8
        }
      }
    },
    "HOIPerpetrator": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "111111"
        },
        "first_name": {
          "type": "string",
          "example": "joe"
        },
        "last_name": {
          "type": "string",
          "example": "west"
        },
        "legacy_descriptor": {
          "$ref": "#/definitions/LegacyDescriptor"
        },
        "limited_access_code": {
          "type": "string",
          "enum": [
            "NONE",
            "SEALED",
            "SENSITIVE"
          ]
        }
      }
    },
    "PostedClientCollateral": {
      "type": "object",
      "required": [
        "activeIndicator",
        "clientId",
        "collateralClientReporterRelationshipType",
        "collateralIndividualId"
      ],
      "properties": {
        "activeIndicator": {
          "type": "string",
          "example": "Y",
          "minLength": 1,
          "maxLength": 1
        },
        "collateralClientReporterRelationshipType": {
          "type": "integer",
          "format": "int32",
          "example": 573
        },
        "clientId": {
          "type": "string",
          "example": "ABC123",
          "minLength": 1,
          "maxLength": 10
        },
        "collateralIndividualId": {
          "type": "string",
          "example": "DEF123",
          "minLength": 1,
          "maxLength": 10
        },
        "commentDescription": {
          "type": "string",
          "example": "A",
          "minLength": 0,
          "maxLength": 50
        },
        "thirdId": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CmsCrossReport": {
      "type": "object",
      "required": [
        "countySpecificCode",
        "crossReportMethodType",
        "description",
        "filedOutOfStateIndicator",
        "governmentOrgCrossRptIndicatorVar",
        "informDate",
        "lawEnforcementIndicator",
        "outStateLawEnforcementAddr",
        "outStateLawEnforcementIndicator",
        "recipientBadgeNumber",
        "recipientName",
        "recipientPhoneExtensionNumber",
        "recipientPhoneNumber",
        "recipientPositionTitleDesc",
        "referenceNumber",
        "referralId",
        "satisfyCrossReportIndicator",
        "staffPersonId",
        "thirdId"
      ],
      "properties": {
        "thirdId": {
          "type": "string",
          "example": "1234ABC123",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 10
        },
        "crossReportMethodType": {
          "type": "integer",
          "format": "int32",
          "example": 2097,
          "description": "Cross report method type system code ID e.g) 2097 -> Telephone Report",
          "readOnly": true
        },
        "filedOutOfStateIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "governmentOrgCrossRptIndicatorVar": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "informTime": {
          "type": "string",
          "example": "16:41:49",
          "readOnly": true
        },
        "recipientBadgeNumber": {
          "type": "string",
          "example": "ABC123",
          "description": "Recipent badge number",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 6
        },
        "recipientPhoneExtensionNumber": {
          "type": "integer",
          "format": "int32",
          "example": 123,
          "readOnly": true
        },
        "recipientPhoneNumber": {
          "type": "integer",
          "format": "int64",
          "example": 1234567,
          "readOnly": true
        },
        "informDate": {
          "type": "string",
          "example": "2000-01-01",
          "description": "yyyy-MM-dd",
          "readOnly": true
        },
        "recipientPositionTitleDesc": {
          "type": "string",
          "example": "title",
          "description": "Recipient position title",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 30
        },
        "referenceNumber": {
          "type": "string",
          "example": "ABC123",
          "description": "Referrence number",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 10
        },
        "referralId": {
          "type": "string",
          "example": "ABC1234567",
          "description": "Referral IDENTIFIER",
          "readOnly": true,
          "minLength": 10,
          "maxLength": 10
        },
        "lawEnforcementId": {
          "type": "string",
          "example": "ABC1234567",
          "description": "Law enforcement ID",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 10
        },
        "staffPersonId": {
          "type": "string",
          "example": "ABC",
          "readOnly": true,
          "minLength": 3,
          "maxLength": 3
        },
        "description": {
          "type": "string",
          "example": "ABC123",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 120
        },
        "recipientName": {
          "type": "string",
          "example": "recipient name",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 40
        },
        "outStateLawEnforcementAddr": {
          "type": "string",
          "example": "law address",
          "description": "out of state law enforcement address",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 254
        },
        "countySpecificCode": {
          "type": "string",
          "example": "99",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 2
        },
        "lawEnforcementIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "outStateLawEnforcementIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "satisfyCrossReportIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        }
      }
    },
    "CmsDocReferralClient": {
      "type": "object",
      "required": [
        "cms_document",
        "doc_name",
        "id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "0131351421120020*JONESMF 00004",
          "description": "30 char document handle",
          "minLength": 30,
          "maxLength": 30
        },
        "doc_name": {
          "type": "string",
          "example": "MJS000.DOC"
        },
        "doc_added_date": {
          "type": "string",
          "example": "2000-01-01",
          "description": "yyyy-MM-dd"
        },
        "cms_document": {
          "example": "base64-encoded binary document",
          "$ref": "#/definitions/CmsDocReferralClientDocument"
        },
        "details": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/CmsDocReferralClientDetail"
          }
        }
      }
    },
    "HOIRequest": {
      "type": "object",
      "properties": {
        "client_ids": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Assignment": {
      "type": "object",
      "required": [
        "countySpecificCode",
        "establishedForCode",
        "establishedForId",
        "responsibilityDescription",
        "startDate",
        "startTime",
        "typeOfAssignmentCode",
        "weightingNumber"
      ],
      "properties": {
        "countySpecificCode": {
          "type": "string",
          "example": "99",
          "description": "code indicating which county has primary assignment for the Referral or Case",
          "minLength": 1,
          "maxLength": 2
        },
        "establishedForCode": {
          "type": "string",
          "example": "R",
          "description": "C = Case or R = Referral",
          "minLength": 0,
          "maxLength": 1
        },
        "establishedForId": {
          "type": "string",
          "example": "ABC1234567",
          "description": "Referral Id or Case Id",
          "minLength": 10,
          "maxLength": 10
        },
        "caseLoadId": {
          "type": "string",
          "example": "ABC1234567",
          "description": "is part of Case Load",
          "minLength": 0,
          "maxLength": 10
        },
        "outOfStateContactId": {
          "type": "string",
          "example": "ABC1234567",
          "description": "out of state contact party",
          "minLength": 0,
          "maxLength": 10
        },
        "responsibilityDescription": {
          "type": "string",
          "example": "investigate",
          "description": "responsibility description",
          "minLength": 0,
          "maxLength": 160
        },
        "secondaryAssignmentRoleType": {
          "type": "integer",
          "format": "int32",
          "example": 1234
        },
        "typeOfAssignmentCode": {
          "type": "string",
          "example": "P",
          "description": "P = Primary, S = Secondary, R = Read Only",
          "minLength": 0,
          "maxLength": 1
        },
        "weightingNumber": {
          "type": "number"
        },
        "endDate": {
          "type": "string",
          "example": "2017-06-18",
          "description": "Assignment end date",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "example": "16:41:49",
          "description": "Assignment end time",
          "readOnly": true
        },
        "startDate": {
          "type": "string",
          "example": "2017-06-18",
          "description": "Assignment start date",
          "readOnly": true
        },
        "startTime": {
          "type": "string",
          "example": "16:41:49",
          "description": "Assignment start time",
          "readOnly": true
        }
      }
    },
    "HOIScreening": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "example": "ABC Screening"
        },
        "start_date": {
          "type": "string",
          "format": "date-time",
          "example": "2017-08-23"
        },
        "end_date": {
          "type": "string",
          "format": "date-time",
          "example": "2017-09-23"
        },
        "county": {
          "$ref": "#/definitions/SystemCodeDescriptor"
        },
        "decision": {
          "type": "string",
          "example": "promote to referral"
        },
        "decision_detail": {
          "type": "string",
          "example": "drug counseling"
        },
        "reporter": {
          "$ref": "#/definitions/HOIReporter"
        },
        "assigned_social_worker": {
          "$ref": "#/definitions/HOISocialWorker"
        },
        "all_people": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/HOIPerson"
          }
        }
      }
    },
    "RelationshipTo": {
      "type": "object",
      "required": [
        "indexed_person_relationship",
        "related_person_last_name",
        "related_person_relationship",
        "relationship_context"
      ],
      "properties": {
        "related_person_first_name": {
          "type": "string",
          "example": "jane",
          "description": "first name",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 20
        },
        "related_person_last_name": {
          "type": "string",
          "example": "sufer",
          "description": "last name",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 25
        },
        "relationship_context": {
          "type": "string",
          "example": "Paternal",
          "description": "context of the relationship",
          "readOnly": true
        },
        "related_person_relationship": {
          "type": "string",
          "example": "Brother",
          "description": "persons relationship to",
          "readOnly": true
        },
        "indexed_person_relationship": {
          "type": "string",
          "example": "Sister",
          "description": "relationship to the person",
          "readOnly": true
        },
        "legacy_descriptor": {
          "readOnly": true,
          "$ref": "#/definitions/CmsRecordDescriptor"
        }
      }
    },
    "HOIReferral": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "start_date": {
          "type": "string",
          "format": "date-time",
          "example": "2017-08-22"
        },
        "end_date": {
          "type": "string",
          "format": "date-time",
          "example": "2017-08-23"
        },
        "county": {
          "$ref": "#/definitions/SystemCodeDescriptor"
        },
        "response_time": {
          "$ref": "#/definitions/SystemCodeDescriptor"
        },
        "reporter": {
          "$ref": "#/definitions/HOIReporter"
        },
        "assigned_social_worker": {
          "$ref": "#/definitions/HOISocialWorker"
        },
        "access_limitation": {
          "$ref": "#/definitions/AccessLimitation"
        },
        "allegations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HOIAllegation"
          }
        },
        "legacy_descriptor": {
          "$ref": "#/definitions/LegacyDescriptor"
        }
      }
    },
    "HOIAllegation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/SystemCodeDescriptor"
        },
        "disposition": {
          "$ref": "#/definitions/SystemCodeDescriptor"
        },
        "victim": {
          "$ref": "#/definitions/HOIVictim"
        },
        "perpetrator": {
          "$ref": "#/definitions/HOIPerpetrator"
        },
        "legacy_descriptor": {
          "$ref": "#/definitions/LegacyDescriptor"
        }
      }
    },
    "Client": {
      "type": "object",
      "required": [
        "adoptionStatusCode",
        "alienRegistrationNumber",
        "birthCity",
        "birthCountryCodeType",
        "birthFacilityName",
        "birthStateCodeType",
        "birthplaceVerifiedIndicator",
        "childClientIndicatorVar",
        "commentDescription",
        "commonFirstName",
        "commonLastName",
        "commonMiddleName",
        "confidentialityInEffectIndicator",
        "creationDate",
        "currCaChildrenServIndicator",
        "currentlyOtherDescription",
        "currentlyRegionalCenterIndicator",
        "deathDateVerifiedIndicator",
        "driverLicenseNumber",
        "driverLicenseStateCodeType",
        "estimatedDobCode",
        "genderCode",
        "hispanicOriginCode",
        "immigrationCountryCodeType",
        "immigrationStatusType",
        "incapacitatedParentCode",
        "individualHealthCarePlanIndicator",
        "limitationOnScpHealthIndicator",
        "literateCode",
        "maritalCohabitatnHstryIndicatorVar",
        "maritalStatusType",
        "militaryStatusCode",
        "namePrefixDescription",
        "nameType",
        "outstandingWarrantIndicator",
        "prevCaChildrenServIndicator",
        "prevOtherDescription",
        "prevRegionalCenterIndicator",
        "primaryEthnicityType",
        "primaryLanguage",
        "religionType",
        "secondaryLanguage",
        "sensitiveHlthInfoOnFileIndicator",
        "sensitivityIndicator",
        "soc158PlacementCode",
        "soc158SealedClientIndicator",
        "socialSecurityNumChangedCode",
        "socialSecurityNumber",
        "suffixTitleDescription",
        "tribalAncestryClientIndicatorVar",
        "tribalMembrshpVerifctnIndicatorVar",
        "unemployedParentCode",
        "zippyCreatedIndicator"
      ],
      "properties": {
        "existingClientId": {
          "type": "string",
          "readOnly": true
        },
        "lastUpdatedTime": {
          "type": "string",
          "format": "date-time",
          "example": "2004-03-31T09:45:58.000-0800",
          "description": "Last Updated Time",
          "readOnly": true
        },
        "adjudicatedDelinquentIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "adoptionStatusCode": {
          "type": "string",
          "example": "N",
          "description": "T=totally free - P=partially free - N=not free - A=not applicable",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 1
        },
        "alienRegistrationNumber": {
          "type": "string",
          "example": "123456789012",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 12
        },
        "birthCity": {
          "type": "string",
          "example": "Fresno",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 35
        },
        "birthCountryCodeType": {
          "type": "integer",
          "format": "int32",
          "example": 1234,
          "readOnly": true
        },
        "birthDate": {
          "type": "string",
          "example": "2016-01-01",
          "description": "yyyy-MM-dd",
          "readOnly": true
        },
        "birthFacilityName": {
          "type": "string",
          "example": "facility name",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 35
        },
        "birthStateCodeType": {
          "type": "integer",
          "format": "int32",
          "example": 1234,
          "readOnly": true
        },
        "birthplaceVerifiedIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "childClientIndicatorVar": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "clientIndexNumber": {
          "type": "string",
          "description": "Client Index Number",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 12
        },
        "commentDescription": {
          "type": "string",
          "example": "a description",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 120
        },
        "commonFirstName": {
          "type": "string",
          "example": "first name",
          "description": "first name of Client",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 20
        },
        "commonMiddleName": {
          "type": "string",
          "example": "middle name",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 20
        },
        "commonLastName": {
          "type": "string",
          "example": "last name",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 25
        },
        "confidentialityActionDate": {
          "type": "string",
          "example": "2000-01-01",
          "description": "yyyy-MM-dd",
          "readOnly": true
        },
        "confidentialityInEffectIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "creationDate": {
          "type": "string",
          "example": "2016-01-01",
          "description": "yyyy-MM-dd",
          "readOnly": true
        },
        "currCaChildrenServIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "currentlyOtherDescription": {
          "type": "string",
          "example": "other description",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 25
        },
        "currentlyRegionalCenterIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "deathDate": {
          "type": "string",
          "example": "2016-01-01",
          "description": "yyyy-MM-dd",
          "readOnly": true
        },
        "deathDateVerifiedIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "deathPlace": {
          "type": "string",
          "example": "some location",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 35
        },
        "deathReasonText": {
          "type": "string",
          "example": "0123456ABC",
          "description": "Death Reason Text",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 10
        },
        "driverLicenseNumber": {
          "type": "string",
          "example": "CA12345678901234567",
          "description": "driver license number of the CLIENT",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 20
        },
        "driverLicenseStateCodeType": {
          "type": "integer",
          "format": "int32",
          "example": 1828,
          "readOnly": true
        },
        "emailAddress": {
          "type": "string",
          "example": "abc@def.com",
          "description": "Email Address",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 50
        },
        "estimatedDobCode": {
          "type": "string",
          "example": "Y",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 1
        },
        "ethUnableToDetReasonCode": {
          "type": "string",
          "example": "K",
          "readOnly": true
        },
        "fatherParentalRightTermDate": {
          "type": "string",
          "example": "2016-01-01",
          "description": "yyyy-MM-dd",
          "readOnly": true
        },
        "genderCode": {
          "type": "string",
          "example": "U",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 1
        },
        "healthSummaryText": {
          "type": "string",
          "example": "0123456ABC",
          "description": "Health Summary Text",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 10
        },
        "hispUnableToDetReasonCode": {
          "type": "string",
          "example": "A",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 1
        },
        "hispanicOriginCode": {
          "type": "string",
          "example": "X",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 1
        },
        "immigrationCountryCodeType": {
          "type": "integer",
          "format": "int32",
          "example": 1234,
          "readOnly": true
        },
        "immigrationStatusType": {
          "type": "integer",
          "format": "int32",
          "example": 1199,
          "readOnly": true
        },
        "incapacitatedParentCode": {
          "type": "string",
          "example": "U",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 2
        },
        "individualHealthCarePlanIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "limitationOnScpHealthIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "literateCode": {
          "type": "string",
          "example": "U",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 1
        },
        "maritalCohabitatnHstryIndicatorVar": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "maritalStatusType": {
          "type": "integer",
          "format": "int32",
          "example": 0,
          "readOnly": true
        },
        "militaryStatusCode": {
          "type": "string",
          "example": "N",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 1
        },
        "motherParentalRightTermDate": {
          "type": "string",
          "example": "2016-01-01",
          "description": "yyyy-MM-dd",
          "readOnly": true
        },
        "namePrefixDescription": {
          "type": "string",
          "example": " ",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 6
        },
        "nameType": {
          "type": "integer",
          "format": "int32",
          "example": 1234,
          "readOnly": true
        },
        "outstandingWarrantIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "prevCaChildrenServIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "prevOtherDescription": {
          "type": "string",
          "example": "some other care",
          "description": "Previously Receiving Care",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 25
        },
        "prevRegionalCenterIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "primaryEthnicityType": {
          "type": "integer",
          "format": "int32",
          "example": 839,
          "readOnly": true
        },
        "primaryLanguage": {
          "type": "integer",
          "format": "int32",
          "example": 1253,
          "readOnly": true
        },
        "religionType": {
          "type": "integer",
          "format": "int32",
          "example": 1234,
          "readOnly": true
        },
        "secondaryLanguage": {
          "type": "integer",
          "format": "int32",
          "example": 1255,
          "readOnly": true
        },
        "sensitiveHlthInfoOnFileIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "sensitivityIndicator": {
          "type": "string",
          "example": "R",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 1
        },
        "soc158PlacementCode": {
          "type": "string",
          "example": "N",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 1
        },
        "soc158SealedClientIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "socialSecurityNumChangedCode": {
          "type": "string",
          "example": "N",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 1
        },
        "socialSecurityNumber": {
          "type": "string",
          "example": "123456789",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 9,
          "pattern": "^(|[0-9]{9})$"
        },
        "suffixTitleDescription": {
          "type": "string",
          "example": "MS",
          "description": "Suffix Title Description",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 4
        },
        "tribalAncestryClientIndicatorVar": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "tribalMembrshpVerifctnIndicatorVar": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "unemployedParentCode": {
          "type": "string",
          "example": "U",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 2
        },
        "zippyCreatedIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "address": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Address"
          }
        }
      }
    },
    "IndividualDeliveredService": {
      "type": "object",
      "required": [
        "first_name",
        "last_name",
        "legacy_descriptor",
        "relationship"
      ],
      "properties": {
        "legacy_descriptor": {
          "readOnly": true,
          "$ref": "#/definitions/CmsRecordDescriptor"
        },
        "first_name": {
          "type": "string",
          "example": "John",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 20
        },
        "last_name": {
          "type": "string",
          "example": "Jones",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 25
        },
        "relationship": {
          "type": "string",
          "example": "Reporter",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 10
        },
        "middle_name": {
          "type": "string",
          "example": "Bob",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 20
        },
        "prefix_title": {
          "type": "string",
          "example": "MR.",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 6
        },
        "name_suffix": {
          "type": "string",
          "example": "SR.",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 4
        }
      }
    },
    "LastUpdatedBy": {
      "type": "object",
      "required": [
        "first_name",
        "last_name",
        "legacy_descriptor"
      ],
      "properties": {
        "legacy_descriptor": {
          "readOnly": true,
          "$ref": "#/definitions/CmsRecordDescriptor"
        },
        "first_name": {
          "type": "string",
          "example": "John",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 20
        },
        "middle_initial": {
          "type": "string",
          "example": "Q",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 1
        },
        "last_name": {
          "type": "string",
          "example": "Smith",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 25
        },
        "prefix_title": {
          "type": "string",
          "example": "MR.",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 6
        },
        "name_suffix": {
          "type": "string",
          "example": "SR.",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 4
        }
      }
    },
    "RelationshipList": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorMessage"
          }
        },
        "relationships": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Relationship"
          }
        }
      }
    },
    "Assignee": {
      "type": "object",
      "required": [
        "county_code",
        "name",
        "office"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "Madera Staff Person",
          "description": "name of staff person assigned to the investigation",
          "readOnly": true
        },
        "county_code": {
          "type": "string",
          "example": "34",
          "description": "County with primary assignment responsibility for Investigation",
          "readOnly": true
        },
        "office": {
          "type": "string",
          "example": "Madera CWS Office",
          "description": "name of the office assigned to investigate",
          "readOnly": true
        },
        "staff_id": {
          "type": "string",
          "example": "OX5",
          "description": "staff person id",
          "readOnly": true
        }
      }
    },
    "StaffPerson": {
      "type": "object",
      "required": [
        "availabilityAndLocationDescription",
        "countyCode",
        "cwsOffice",
        "cwsOfficeAddress",
        "dutyWorkerIndicator",
        "firstName",
        "lastName",
        "phoneExt",
        "phoneNumber",
        "ssrsLicensingWorkerId",
        "startDate",
        "telecommuterIndicator"
      ],
      "properties": {
        "endDate": {
          "type": "string",
          "example": "2016-10-31",
          "description": "yyyy-MM-dd",
          "readOnly": true
        },
        "firstName": {
          "type": "string",
          "example": "John",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 20
        },
        "jobTitle": {
          "type": "string",
          "example": "Case Worker",
          "description": "Job Title",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 30
        },
        "lastName": {
          "type": "string",
          "example": "Smith",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 25
        },
        "middleInitial": {
          "type": "string",
          "example": "Q",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 1
        },
        "namePrefix": {
          "type": "string",
          "example": "MR.",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 6
        },
        "phoneNumber": {
          "type": "number",
          "example": 9165551212,
          "readOnly": true
        },
        "phoneExt": {
          "type": "integer",
          "format": "int32",
          "example": 123,
          "readOnly": true
        },
        "startDate": {
          "type": "string",
          "example": "2016-10-31",
          "description": "2016-10-31",
          "readOnly": true
        },
        "nameSuffix": {
          "type": "string",
          "example": "SR.",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 4
        },
        "telecommuterIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "cwsOffice": {
          "type": "string",
          "example": "1234567def",
          "description": "IDENTIFIER of CWS_OFFT",
          "readOnly": true,
          "minLength": 10,
          "maxLength": 10
        },
        "availabilityAndLocationDescription": {
          "type": "string",
          "example": "some free form text",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 160
        },
        "ssrsLicensingWorkerId": {
          "type": "string",
          "example": "9021",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 4
        },
        "countyCode": {
          "type": "string",
          "example": "99",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 2
        },
        "dutyWorkerIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "cwsOfficeAddress": {
          "type": "string",
          "example": "1234567ghi",
          "description": "IDENTIFIER of CWSADDRT",
          "readOnly": true,
          "minLength": 10,
          "maxLength": 10
        },
        "emailAddress": {
          "type": "string",
          "example": "john.q.smith@somedomain.com",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 50
        }
      }
    },
    "SimpleAllegation": {
      "type": "object",
      "properties": {
        "victim_id": {
          "type": "string",
          "example": "22",
          "readOnly": true
        },
        "perpetrator_id": {
          "type": "string",
          "example": "11",
          "readOnly": true
        },
        "allegation_types": {
          "type": "array",
          "example": "[General neglect, Physical abuse]",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AllegationPerpetratorHistory": {
      "type": "object",
      "required": [
        "allegationId",
        "countySpecificCode",
        "perpetratorUpdateDate"
      ],
      "properties": {
        "countySpecificCode": {
          "type": "string",
          "example": "99",
          "description": "County code",
          "readOnly": true,
          "minLength": 2,
          "maxLength": 2
        },
        "perpetratorClientId": {
          "type": "string",
          "example": "ABC1234568",
          "description": "Client ID of perpetrator",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 10
        },
        "allegationId": {
          "type": "string",
          "example": "ABC1234567",
          "description": "Allegation ID",
          "readOnly": true,
          "minLength": 10,
          "maxLength": 10
        },
        "perpetratorUpdateDate": {
          "type": "string",
          "example": "2016-11-30",
          "description": "yyyy-MM-dd",
          "readOnly": true
        }
      }
    },
    "ValidatedAddress": {
      "type": "object",
      "properties": {
        "street_address": {
          "type": "string",
          "example": "9500 Kiefer Blvd",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 50
        },
        "city": {
          "type": "string",
          "example": "Sacramento",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 50
        },
        "state": {
          "type": "string",
          "example": "CA",
          "readOnly": true
        },
        "zip": {
          "type": "integer",
          "format": "int32",
          "example": 95827,
          "readOnly": true
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "example": -121.34332,
          "readOnly": true
        },
        "lattitude": {
          "type": "number",
          "format": "double",
          "example": 38.5445,
          "readOnly": true
        },
        "deliverable": {
          "type": "boolean",
          "example": true,
          "readOnly": true,
          "default": false
        }
      }
    },
    "AccessLimitation": {
      "type": "object",
      "properties": {
        "limited_access_code": {
          "type": "string",
          "enum": [
            "NONE",
            "SEALED",
            "SENSITIVE"
          ]
        },
        "limited_access_date": {
          "type": "string",
          "format": "date-time"
        },
        "limited_access_description": {
          "type": "string"
        },
        "limited_access_government_entity": {
          "$ref": "#/definitions/SystemCodeDescriptor"
        }
      }
    },
    "nsAddress": {
      "type": "object",
      "required": [
        "legacy_descriptor",
        "legacy_id",
        "legacy_source_table"
      ],
      "properties": {
        "legacy_source_table": {
          "type": "string",
          "example": "ADDRS_T",
          "description": "Legacy Source Table"
        },
        "legacy_id": {
          "type": "string",
          "example": "ABC1234567",
          "description": "Legacy Id",
          "minLength": 0,
          "maxLength": 10
        },
        "street_address": {
          "type": "string",
          "example": "742 Evergreen Terrace",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 50
        },
        "city": {
          "type": "string",
          "example": "Springfield",
          "description": "City",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 50
        },
        "state": {
          "type": "integer",
          "format": "int32",
          "example": 1828,
          "description": "State Code",
          "readOnly": true,
          "enum": [
            1823,
            1824,
            1825,
            1826,
            1827,
            1828,
            1829,
            1830,
            1831,
            1832,
            1833,
            1834,
            1835,
            1836,
            1837,
            1838,
            1839,
            1840,
            1841,
            1842,
            1843,
            1844,
            1845,
            1846,
            1847,
            1848,
            1849,
            1850,
            1851,
            1852,
            1853,
            1854,
            1855,
            1856,
            1857,
            1858,
            1859,
            1860,
            1861,
            1862,
            1863,
            1864,
            1865,
            1866,
            1867,
            1868,
            1869,
            1870,
            1871,
            1872,
            1873,
            1874,
            1875,
            1876,
            1877,
            1878,
            1879,
            1880
          ]
        },
        "zip": {
          "type": "string",
          "example": "95757",
          "description": "Zip",
          "readOnly": true,
          "minLength": 5,
          "maxLength": 5
        },
        "type": {
          "type": "integer",
          "format": "int32",
          "example": 32,
          "readOnly": true,
          "enum": [
            27,
            28,
            29,
            30,
            31,
            32,
            6271,
            6272,
            6273
          ]
        },
        "legacy_descriptor": {
          "$ref": "#/definitions/LegacyDescriptor"
        }
      }
    },
    "Screening": {
      "type": "object",
      "required": [
        "assignee_staff_id",
        "id",
        "referral_id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "ABC1234568",
          "description": "Screening ID",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 50
        },
        "name": {
          "type": "string",
          "example": "Some Screening name",
          "description": "Screening Name",
          "readOnly": true
        },
        "reference": {
          "type": "string",
          "example": "Screening Reference",
          "description": "Screening Reference",
          "readOnly": true
        },
        "screening_decision": {
          "type": "string",
          "example": "Screening Decision",
          "description": "Screening Decision",
          "readOnly": true
        },
        "screening_decision_detail": {
          "type": "string",
          "example": "Screening Decision Detail",
          "description": "Screening Decision Detail",
          "readOnly": true
        },
        "assignee": {
          "type": "string",
          "example": "Screening Assignee",
          "description": "Screening Assignee",
          "readOnly": true
        },
        "started_at": {
          "type": "string",
          "example": "1992-06-18",
          "description": "Screening Start Date",
          "readOnly": true
        },
        "referral_id": {
          "type": "string",
          "example": "ABC1234568",
          "description": "Referral ID",
          "readOnly": true,
          "minLength": 10,
          "maxLength": 10
        },
        "assignee_staff_id": {
          "type": "string",
          "example": "con",
          "description": "Screening Assignee Id",
          "readOnly": true
        }
      }
    },
    "Participant": {
      "type": "object",
      "required": [
        "gender",
        "id",
        "legacy_descriptor",
        "legacy_id",
        "legacy_source_table",
        "limited_access_code",
        "roles"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 12345,
          "description": "Participant Id",
          "readOnly": true
        },
        "legacy_source_table": {
          "type": "string",
          "example": "CLIENT_T",
          "description": "Legacy Source Table"
        },
        "legacy_id": {
          "type": "string",
          "example": "ABC1234567",
          "description": "Legacy Client Id",
          "minLength": 0,
          "maxLength": 10
        },
        "first_name": {
          "type": "string",
          "example": "John",
          "description": "First Name",
          "readOnly": true
        },
        "last_name": {
          "type": "string",
          "example": "Smith",
          "description": "Last name",
          "readOnly": true
        },
        "gender": {
          "type": "string",
          "example": "M",
          "description": "Gender Code",
          "readOnly": true,
          "enum": [
            "M",
            "F",
            "U"
          ]
        },
        "ssn": {
          "type": "string",
          "example": "123456789",
          "readOnly": true,
          "pattern": "^(|[0-9]{9})$"
        },
        "date_of_birth": {
          "type": "string",
          "example": "2001-09-13",
          "description": "Date of Birth",
          "readOnly": true
        },
        "roles": {
          "type": "array",
          "example": "['Victim', 'Mandated Reporter']",
          "description": "Role of participant",
          "readOnly": true,
          "items": {
            "type": "object"
          }
        },
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/nsAddress"
          }
        },
        "race_ethnicity": {
          "readOnly": true,
          "$ref": "#/definitions/RaceAndEthnicity"
        },
        "legacy_descriptor": {
          "$ref": "#/definitions/LegacyDescriptor"
        },
        "middle_name": {
          "type": "string",
          "example": "middle name",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 20
        },
        "name_suffix": {
          "type": "string",
          "example": "Jr.",
          "description": "name suffix",
          "readOnly": true
        },
        "primary_language": {
          "type": "integer",
          "format": "int32",
          "example": 1234,
          "readOnly": true
        },
        "secondary_language": {
          "type": "integer",
          "format": "int32",
          "example": 1234,
          "readOnly": true
        },
        "screening_id": {
          "type": "integer",
          "format": "int64",
          "example": 12345,
          "description": "Screening Id",
          "readOnly": true
        },
        "reporter_confidential_waiver": {
          "type": "boolean",
          "example": false,
          "description": "Reporter Confidential Waiver",
          "readOnly": true,
          "default": false
        },
        "reporter_employer_name": {
          "type": "string",
          "example": "Buisness Name, Inc",
          "description": "Reporter Employer Name",
          "readOnly": true
        },
        "client_staff_person_added": {
          "type": "boolean",
          "example": false,
          "description": "Staff Person Added",
          "readOnly": true,
          "default": false
        },
        "limited_access_code": {
          "type": "string",
          "example": "R",
          "description": "Limited Access Code",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 1
        }
      }
    },
    "JSONObject": {
      "type": "object"
    },
    "HOIScreeningResponse": {
      "type": "object",
      "properties": {
        "screenings": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/HOIScreening"
          }
        }
      }
    },
    "CmsDocReferralClientDetail": {
      "type": "object",
      "properties": {
        "referral_id": {
          "type": "string"
        },
        "client_id": {
          "type": "string"
        },
        "common_first_name": {
          "type": "string"
        },
        "common_middle_name": {
          "type": "string"
        },
        "common_last_name": {
          "type": "string"
        },
        "birth_date": {
          "type": "string",
          "example": "2000-01-01",
          "description": "yyyy-MM-dd"
        },
        "other_name": {
          "type": "string"
        },
        "name_type": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "address_type": {
          "type": "string"
        }
      }
    },
    "HOIRelatedPerson": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "111111"
        },
        "first_name": {
          "type": "string",
          "example": "joe"
        },
        "last_name": {
          "type": "string",
          "example": "west"
        },
        "legacy_descriptor": {
          "$ref": "#/definitions/LegacyDescriptor"
        },
        "relationship": {
          "$ref": "#/definitions/SystemCodeDescriptor"
        },
        "limited_access_code": {
          "type": "string",
          "enum": [
            "NONE",
            "SEALED",
            "SENSITIVE"
          ]
        }
      }
    },
    "HOIPerson": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "111111"
        },
        "first_name": {
          "type": "string",
          "example": "joe"
        },
        "last_name": {
          "type": "string",
          "example": "west"
        },
        "legacy_descriptor": {
          "$ref": "#/definitions/LegacyDescriptor"
        }
      }
    },
    "InvestigationAddress": {
      "type": "object",
      "required": [
        "legacy_descriptor"
      ],
      "properties": {
        "legacy_descriptor": {
          "description": "CMS record description",
          "readOnly": true,
          "$ref": "#/definitions/CmsRecordDescriptor"
        },
        "street_address": {
          "type": "string",
          "example": "742 Evergreen Terrace",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 50
        },
        "city": {
          "type": "string",
          "example": "Springfield",
          "description": "City",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 20
        },
        "state": {
          "type": "integer",
          "format": "int32",
          "example": 1828,
          "description": "State Code",
          "readOnly": true
        },
        "zip": {
          "type": "string",
          "example": "95757",
          "description": "Zip",
          "readOnly": true,
          "minLength": 5,
          "maxLength": 5
        },
        "type": {
          "type": "integer",
          "format": "int32",
          "example": 32,
          "readOnly": true
        }
      }
    },
    "CmsDocReferralClientDocument": {
      "type": "object",
      "properties": {
        "_name": {
          "type": "string"
        },
        "_content": {
          "type": "string"
        }
      }
    },
    "Person": {
      "type": "object",
      "required": [
        "first_name",
        "gender",
        "last_name",
        "sealed",
        "sensitive",
        "ssn"
      ],
      "properties": {
        "legacy_descriptor": {
          "readOnly": true,
          "$ref": "#/definitions/CmsRecordDescriptor"
        },
        "last_updated_by": {
          "type": "string",
          "description": "staff person Id",
          "readOnly": true
        },
        "last_updated_at": {
          "type": "string",
          "format": "date-time",
          "example": "2010-04-27T23:30:14.000Z",
          "description": "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
          "readOnly": true
        },
        "first_name": {
          "type": "string",
          "example": "Gerry",
          "description": "first name",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 20
        },
        "middle_name": {
          "type": "string",
          "example": "M",
          "description": "middle name",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 50
        },
        "last_name": {
          "type": "string",
          "example": "Mitchell",
          "description": "last name",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 50
        },
        "name_suffix": {
          "type": "string",
          "example": "jr",
          "description": "Suffix title",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 4
        },
        "gender": {
          "type": "string",
          "example": "M",
          "description": "gender code",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 1
        },
        "date_of_birth": {
          "type": "string",
          "example": "2012-04-01",
          "description": "yyyy-MM-dd",
          "readOnly": true
        },
        "ssn": {
          "type": "string",
          "example": "999551111",
          "description": "social security number",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 9
        },
        "languages": {
          "type": "array",
          "example": "['839', '840']",
          "description": "languages",
          "readOnly": true,
          "items": {
            "type": "object"
          }
        },
        "race_codes": {
          "readOnly": true,
          "$ref": "#/definitions/RaceAndEthnicity"
        },
        "sensitive": {
          "type": "boolean",
          "example": false,
          "description": "person contains sensitive information",
          "readOnly": true,
          "default": false
        },
        "sealed": {
          "type": "boolean",
          "example": false,
          "description": "person contains sealed information",
          "readOnly": true,
          "default": false
        },
        "phone_numbers": {
          "type": "array",
          "description": "phone numbers",
          "readOnly": true,
          "items": {
            "type": "object"
          }
        },
        "roles": {
          "type": "array",
          "example": "['Non-mandated Reporter']",
          "description": "Roles of person",
          "readOnly": true,
          "items": {
            "type": "object"
          }
        },
        "addresses": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/InvestigationAddress"
          }
        }
      }
    },
    "ReferralClient": {
      "type": "object",
      "required": [
        "ageNumber",
        "agePeriodCode",
        "approvalStatusType",
        "clientId",
        "countySpecificCode",
        "dispositionClosureDescription",
        "dispositionClosureReasonType",
        "dispositionCode",
        "referralId",
        "selfReportedIndicator",
        "staffPersonAddedIndicator"
      ],
      "properties": {
        "approvalNumber": {
          "type": "string",
          "example": "ABC1234567",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 10
        },
        "approvalStatusType": {
          "type": "integer",
          "format": "int32",
          "example": 123,
          "readOnly": true
        },
        "dispositionClosureReasonType": {
          "type": "integer",
          "format": "int32",
          "example": 234,
          "readOnly": true
        },
        "dispositionCode": {
          "type": "string",
          "example": "A",
          "description": "A = Assesment, I = In Person Investigation, S = In Person Investigation and Services, X = Erroneously Added",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 1
        },
        "dispositionDate": {
          "type": "string",
          "example": "2000-01-01",
          "description": "yyyy-MM-dd",
          "readOnly": true
        },
        "selfReportedIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "staffPersonAddedIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "referralId": {
          "type": "string",
          "example": "ABC1234567",
          "description": "named in referral",
          "readOnly": true,
          "minLength": 10,
          "maxLength": 10
        },
        "clientId": {
          "type": "string",
          "example": "ABC1234567",
          "description": "identifies a client",
          "readOnly": true,
          "minLength": 10,
          "maxLength": 10
        },
        "dispositionClosureDescription": {
          "type": "string",
          "example": "Some Description",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 254
        },
        "ageNumber": {
          "type": "integer",
          "format": "int32",
          "example": 12,
          "readOnly": true
        },
        "agePeriodCode": {
          "type": "string",
          "example": "D",
          "description": "unit of measure for age",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 1
        },
        "countySpecificCode": {
          "type": "string",
          "example": "99",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 2
        },
        "mentalHealthIssuesIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "alcoholIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "drugIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        }
      }
    },
    "CmsReferral": {
      "type": "object",
      "required": [
        "allegation",
        "client",
        "crossReport",
        "referral",
        "referralClient",
        "reporter"
      ],
      "properties": {
        "referral": {
          "readOnly": true,
          "$ref": "#/definitions/Referral"
        },
        "client": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Client"
          }
        },
        "allegation": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/cmsAllegation"
          }
        },
        "crossReport": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/CmsCrossReport"
          }
        },
        "referralClient": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/ReferralClient"
          }
        },
        "reporter": {
          "readOnly": true,
          "$ref": "#/definitions/Reporter"
        }
      }
    },
    "CrossReportAgency": {
      "type": "object",
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "example": "DEPARTMENT_OF_JUSTICE",
          "description": "Agency Type",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "example": "County Sheriff Dept",
          "description": "Agency Name",
          "readOnly": true
        }
      }
    },
    "SafetyAlerts": {
      "type": "object",
      "properties": {
        "alerts": {
          "type": "array",
          "description": "Safety Alert Type",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "alert_information": {
          "type": "string",
          "description": "Alert Information"
        }
      }
    },
    "ContactRequest": {
      "type": "object",
      "required": [
        "communication_method",
        "location",
        "people",
        "purpose",
        "started_at",
        "status"
      ],
      "properties": {
        "started_at": {
          "type": "string",
          "example": "2010-04-27T23:30:14.000Z",
          "description": "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
          "readOnly": true
        },
        "ended_at": {
          "type": "string",
          "example": "2010-04-28T23:30:14.000Z",
          "description": "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
          "readOnly": true
        },
        "purpose": {
          "type": "string",
          "example": "433",
          "description": "Delivered service contact type system code ID e.g)  -> ",
          "readOnly": true
        },
        "communication_method": {
          "type": "string",
          "example": "408",
          "description": "Delivered service communication method type system code ID e.g) 408 -> In-Person",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "example": "C",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 1
        },
        "services": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "location": {
          "type": "string",
          "example": "415",
          "description": "Delivered service contact location type system code ID e.g) 415 -> CWS Office",
          "readOnly": true
        },
        "note": {
          "type": "string",
          "example": "detail text",
          "readOnly": true
        },
        "people": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/IndividualDeliveredService"
          }
        }
      }
    },
    "CrossReportList": {
      "type": "object",
      "properties": {
        "cross_reports": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/CrossReport"
          }
        }
      }
    },
    "HOIReporter": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "111111"
        },
        "first_name": {
          "type": "string",
          "example": "joe"
        },
        "last_name": {
          "type": "string",
          "example": "west"
        },
        "role": {
          "type": "string",
          "enum": [
            "MANDATED_REPORTER",
            "NON_MANDATED_REPORTER",
            "ANONYMOUS_REPORTER",
            "SELF_REPORTER"
          ]
        },
        "legacy_descriptor": {
          "$ref": "#/definitions/LegacyDescriptor"
        }
      }
    },
    "LegacyKeyResponse": {
      "type": "object",
      "properties": {
        "uiIdentifier": {
          "type": "string"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorMessage"
          }
        }
      }
    },
    "HOICase": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "start_date": {
          "type": "string",
          "format": "date-time"
        },
        "end_date": {
          "type": "string",
          "format": "date-time",
          "example": "2017-09-30"
        },
        "county": {
          "$ref": "#/definitions/SystemCodeDescriptor"
        },
        "service_component": {
          "$ref": "#/definitions/SystemCodeDescriptor"
        },
        "focus_child": {
          "$ref": "#/definitions/HOIVictim"
        },
        "assigned_social_worker": {
          "$ref": "#/definitions/HOISocialWorker"
        },
        "access_limitation": {
          "$ref": "#/definitions/AccessLimitation"
        },
        "parents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HOIRelatedPerson"
          }
        },
        "legacy_descriptor": {
          "$ref": "#/definitions/LegacyDescriptor"
        }
      }
    },
    "SystemCodeDescriptor": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "AllegationPerson": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string",
          "description": "First Name"
        },
        "last_name": {
          "type": "string",
          "description": "Last Name"
        },
        "middle_name": {
          "type": "string",
          "description": "Middle Name"
        },
        "name_suffix": {
          "type": "string",
          "description": "Suffix"
        },
        "date_of_birth": {
          "type": "string",
          "example": "2012-04-01",
          "description": "yyyy-MM-dd"
        },
        "legacy_descriptor": {
          "$ref": "#/definitions/CmsRecordDescriptor"
        }
      }
    },
    "nsAllegation": {
      "type": "object",
      "required": [
        "legacy_id",
        "legacy_source_table",
        "non_protecting_parent",
        "perpetrator_person_id",
        "type",
        "victim_person_id"
      ],
      "properties": {
        "legacy_source_table": {
          "type": "string",
          "example": "ALLGTN_T",
          "description": "Legacy Source Table"
        },
        "legacy_id": {
          "type": "string",
          "example": "ABC1234567",
          "description": "Legacy Id",
          "minLength": 0,
          "maxLength": 10
        },
        "victim_person_id": {
          "type": "integer",
          "format": "int64",
          "example": 12345,
          "description": "id of victim",
          "readOnly": true
        },
        "perpetrator_person_id": {
          "type": "integer",
          "format": "int64",
          "example": 12345,
          "description": "id of perpatrator",
          "readOnly": true
        },
        "type": {
          "type": "integer",
          "format": "int32",
          "example": 2179,
          "description": "type of allegation code",
          "readOnly": true
        },
        "county": {
          "type": "string",
          "example": "34",
          "readOnly": true
        },
        "non_protecting_parent": {
          "type": "string",
          "example": "U",
          "description": "Non protecting parent Code",
          "minLength": 0,
          "maxLength": 1,
          "enum": [
            "U",
            "P",
            "Y",
            "N"
          ]
        }
      }
    },
    "DrmsDocument": {
      "type": "object",
      "required": [
        "creationTimeStamp",
        "drmsDocumentTemplateId",
        "fingerprintStaffPerson",
        "handleName",
        "staffPersonId"
      ],
      "properties": {
        "creationTimeStamp": {
          "type": "string",
          "format": "date-time",
          "description": "2016-08-03T01:00:00.000",
          "readOnly": true
        },
        "drmsDocumentTemplateId": {
          "type": "string",
          "example": "DUMMY",
          "description": "ABC1234567",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 10
        },
        "fingerprintStaffPerson": {
          "type": "string",
          "example": "q1p",
          "description": "q1p",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 3
        },
        "staffPersonId": {
          "type": "string",
          "example": "q1p",
          "description": "q1p",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 3
        },
        "handleName": {
          "type": "string",
          "example": "DUMMY",
          "description": "Some thing",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 30
        }
      }
    },
    "cmsAllegation": {
      "type": "object",
      "required": [
        "abuseFrequency",
        "abuseFrequencyPeriodCode",
        "abuseLocationDescription",
        "allegationDispositionType",
        "allegationType",
        "countySpecificCode",
        "dispositionDescription",
        "injuryHarmDetailIndicator",
        "nonProtectingParentCode",
        "referralId",
        "staffPersonAddedIndicator",
        "victimClientId",
        "zippyCreatedIndicator"
      ],
      "properties": {
        "abuseEndDate": {
          "type": "string",
          "example": "2016-11-30",
          "description": "date when abuse allegedly ended",
          "readOnly": true
        },
        "abuseFrequency": {
          "type": "integer",
          "format": "int32",
          "example": 1234,
          "readOnly": true
        },
        "abuseFrequencyPeriodCode": {
          "type": "string",
          "example": "D",
          "description": "frequency of abuse",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 1
        },
        "abuseLocationDescription": {
          "type": "string",
          "example": "school yard",
          "description": "location description",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 75
        },
        "abuseStartDate": {
          "type": "string",
          "example": "2016-11-30",
          "description": "start date of alleged abuse",
          "readOnly": true
        },
        "allegationDispositionType": {
          "type": "integer",
          "format": "int32",
          "example": 1234,
          "readOnly": true
        },
        "allegationType": {
          "type": "integer",
          "format": "int32",
          "example": 1234,
          "readOnly": true
        },
        "dispositionDescription": {
          "type": "string",
          "example": "investigate",
          "description": "description of allegation disposition",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 254
        },
        "dispositionDate": {
          "type": "string",
          "example": "2016-11-30",
          "description": "date of allegation disposition",
          "readOnly": true
        },
        "injuryHarmDetailIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "nonProtectingParentCode": {
          "type": "string",
          "example": "U",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 1,
          "enum": [
            "U",
            "P",
            "Y",
            "N"
          ]
        },
        "staffPersonAddedIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "victimClientId": {
          "type": "string",
          "example": "ABC1234567",
          "description": "CLIENT ID of victim",
          "readOnly": true,
          "minLength": 10,
          "maxLength": 10
        },
        "perpetratorClientId": {
          "type": "string",
          "example": "ABC1234567",
          "description": "CLIENT ID of perpetrator",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 10
        },
        "referralId": {
          "type": "string",
          "example": "ABC1234567",
          "readOnly": true,
          "minLength": 10,
          "maxLength": 10
        },
        "countySpecificCode": {
          "type": "string",
          "example": "A1",
          "description": "County code",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 2
        },
        "zippyCreatedIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "placementFacilityType": {
          "type": "integer",
          "format": "int32",
          "example": 1234,
          "readOnly": true
        }
      }
    },
    "ChildClient": {
      "type": "object",
      "required": [
        "adoptableCode",
        "adoptedAge",
        "afdcFcEligibilityIndicatorVar",
        "allEducationInfoOnFileIndicator",
        "allHealthInfoOnFileIndicator",
        "attemptToAcquireEducInfoDesc",
        "attemptToAcquireHlthInfoDesc",
        "awolAbductedCode",
        "birthHistoryIndicatorVar",
        "childIndianAncestryIndicator",
        "deathCircumstancesType",
        "fc2EligApplicationIndicatorVar",
        "foodStampsApplicationIndicator",
        "icwaEligibilityCode",
        "intercountryAdoptDisruptedIndicator",
        "intercountryAdoptDissolvedIndicator",
        "medEligibilityApplicationIndicatorVar",
        "minorNmdParentIndicator",
        "parentalRightsLimitedIndicator",
        "parentalRightsTermintnIndicatorVar",
        "paternityIndividualIndicatorVar",
        "previouslyAdoptedCode",
        "safelySurrendedBabiesIndicatorVar",
        "saw1EligApplicationIndicatorVar",
        "sawsCaseSerialNumber",
        "ssiSspApplicationIndicator",
        "tribalAncestryNotifctnIndicatorVar",
        "tribalCustomaryAdoptionIndicator",
        "victimClientId"
      ],
      "properties": {
        "victimClientId": {
          "type": "string",
          "example": "ABC1234567",
          "description": "CLIENT ID of victim",
          "readOnly": true,
          "minLength": 10,
          "maxLength": 10
        },
        "adoptableCode": {
          "type": "string",
          "example": "N",
          "description": "Adoptable Code",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 2
        },
        "adoptedAge": {
          "type": "integer",
          "format": "int32",
          "example": 1234,
          "description": "Adpoted Age",
          "readOnly": true
        },
        "afdcFcEligibilityIndicatorVar": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "allEducationInfoOnFileIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "allHealthInfoOnFileIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "attemptToAcquireEducInfoDesc": {
          "type": "string",
          "example": "Eucation",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 254
        },
        "attemptToAcquireHlthInfoDesc": {
          "type": "string",
          "example": "Health",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 254
        },
        "awolAbductedCode": {
          "type": "string",
          "example": "N",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 1
        },
        "birthHistoryIndicatorVar": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "childIndianAncestryIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "collegeIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "currentCaseId": {
          "type": "string",
          "example": "ABC1234567",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 10
        },
        "deathCircumstancesType": {
          "type": "integer",
          "format": "int32",
          "example": 1234,
          "readOnly": true
        },
        "disabilityDiagnosedCode": {
          "type": "string",
          "example": "N",
          "description": "Disablility Diagnosed",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 1
        },
        "drmsHePassportDocOld": {
          "type": "string",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 10
        },
        "drmsHealthEducPassportDoc": {
          "type": "string",
          "example": "Document",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 10
        },
        "drmsVoluntaryPlcmntAgrmntDoc": {
          "type": "string",
          "example": "Agreement",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 10
        },
        "fc2EligApplicationIndicatorVar": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "foodStampsApplicationDate": {
          "type": "string",
          "example": "2000-01-01",
          "description": "yyyy-MM-dd",
          "readOnly": true
        },
        "foodStampsApplicationIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "icwaEligibilityCode": {
          "type": "string",
          "example": "N",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 1
        },
        "intercountryAdoptDisruptedIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "intercountryAdoptDissolvedIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "medEligibilityApplicationIndicatorVar": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "minorNmdParentIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "parentalRightsLimitedIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "parentalRightsTermintnIndicatorVar": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "paternityIndividualIndicatorVar": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "postsecVocIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "previouslyAdoptedCode": {
          "type": "string",
          "example": "N",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 1
        },
        "safelySurrendedBabiesIndicatorVar": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "saw1EligApplicationIndicatorVar": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "sawsCaseSerialNumber": {
          "type": "integer",
          "format": "int32",
          "example": 0,
          "readOnly": true
        },
        "sijsScheduledInterviewDate": {
          "type": "string",
          "example": "2000-01-01",
          "description": "yyyy-MM-dd",
          "readOnly": true
        },
        "siiNextScreeningDueDate": {
          "type": "string",
          "example": "2000-01-01",
          "description": "yyyy-MM-dd",
          "readOnly": true
        },
        "ssiSspApplicationIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "tribalAncestryNotifctnIndicatorVar": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "tribalCustomaryAdoptionDate": {
          "type": "string",
          "example": "2000-01-01",
          "description": "yyyy-MM-dd",
          "readOnly": true
        },
        "tribalCustomaryAdoptionIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        }
      }
    },
    "HOIVictim": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "111111"
        },
        "first_name": {
          "type": "string",
          "example": "joe"
        },
        "last_name": {
          "type": "string",
          "example": "west"
        },
        "legacy_descriptor": {
          "$ref": "#/definitions/LegacyDescriptor"
        },
        "limited_access_code": {
          "type": "string",
          "enum": [
            "NONE",
            "SEALED",
            "SENSITIVE"
          ]
        }
      }
    },
    "Language": {
      "type": "object",
      "properties": {
        "language": {
          "type": "string",
          "example": "English",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 50
        }
      }
    },
    "NsCrossReport": {
      "type": "object",
      "required": [
        "county_id",
        "inform_date",
        "method"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "1234"
        },
        "legacy_source_table": {
          "type": "string",
          "example": "CRSS_RPT",
          "description": "Legacy Source Table"
        },
        "legacy_id": {
          "type": "string",
          "example": "ABC1234567",
          "description": "legacy Id",
          "minLength": 0,
          "maxLength": 10
        },
        "filed_out_of_state": {
          "type": "boolean",
          "example": false,
          "description": "Cross Report was filed out of state",
          "readOnly": true,
          "default": false
        },
        "method": {
          "type": "integer",
          "format": "int32",
          "example": 2097,
          "description": "Communication method system code ID e.g) 2097 -> Telephone Report",
          "readOnly": true
        },
        "inform_date": {
          "type": "string",
          "example": "2001-09-13",
          "description": "yyyy-MM-dd",
          "readOnly": true
        },
        "county_id": {
          "type": "string",
          "example": "34",
          "description": "County of the crossReport agency",
          "readOnly": true
        },
        "agencies": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/GovernmentAgency"
          }
        }
      }
    },
    "Race": {
      "type": "object",
      "properties": {
        "race": {
          "type": "string",
          "example": "White",
          "minLength": 0,
          "maxLength": 50
        },
        "subrace": {
          "type": "string",
          "example": "European",
          "minLength": 0,
          "maxLength": 50
        }
      }
    },
    "ClientRelationship": {
      "type": "object",
      "required": [
        "absentParentCode",
        "clientRelationshipType",
        "primaryClientId",
        "sameHomeCode",
        "secondaryClientId"
      ],
      "properties": {
        "absentParentCode": {
          "type": "string",
          "example": "N",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 1
        },
        "clientRelationshipType": {
          "type": "integer",
          "format": "int32",
          "example": 179,
          "readOnly": true
        },
        "endDate": {
          "type": "string",
          "example": "2000-01-01",
          "description": "yyyy-MM-dd",
          "readOnly": true
        },
        "secondaryClientId": {
          "type": "string",
          "example": "ABC123",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 10
        },
        "primaryClientId": {
          "type": "string",
          "example": "DEF123",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 10
        },
        "sameHomeCode": {
          "type": "string",
          "example": "Y",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 1
        },
        "startDate": {
          "type": "string",
          "example": "2000-01-01",
          "description": "yyyy-MM-dd",
          "readOnly": true
        }
      }
    },
    "Allegation": {
      "type": "object",
      "required": [
        "allegation_type",
        "victim"
      ],
      "properties": {
        "allegation_type": {
          "type": "string",
          "example": "2179",
          "description": "Allegation Type"
        },
        "created_by_screener": {
          "type": "boolean",
          "description": "allegation created during screening",
          "default": false
        },
        "allegation_sub_types": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AllegationSubType"
          }
        },
        "disposition": {
          "type": "string"
        },
        "rationale": {
          "type": "string",
          "minLength": 0,
          "maxLength": 254
        },
        "legacy_descriptor": {
          "$ref": "#/definitions/CmsRecordDescriptor"
        },
        "victim": {
          "$ref": "#/definitions/AllegationPerson"
        },
        "perpetrator": {
          "$ref": "#/definitions/AllegationPerson"
        }
      }
    },
    "DeliveredServiceDomain": {
      "type": "object",
      "required": [
        "contact_visit",
        "county",
        "id",
        "start_date",
        "start_time",
        "wrap_around_service"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "ABC1234567",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 10
        },
        "child_family_team_lead_agency": {
          "type": "integer",
          "format": "int32",
          "example": 4212,
          "readOnly": true
        },
        "core_service": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "communication_method": {
          "type": "integer",
          "format": "int32",
          "example": 408,
          "description": "Delivered service communication method type system code ID e.g) 408 -> In-Person",
          "readOnly": true
        },
        "contact_location": {
          "type": "integer",
          "format": "int32",
          "example": 415,
          "description": "Delivered service contact location type system code ID e.g) 415 -> CWS Office",
          "readOnly": true
        },
        "contact_visit": {
          "type": "string",
          "example": "C",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 1
        },
        "county": {
          "type": "string",
          "example": "99",
          "readOnly": true,
          "minLength": 2,
          "maxLength": 2
        },
        "detail_text": {
          "type": "string",
          "example": "detail1",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 32700
        },
        "detail_text_continuation": {
          "type": "string",
          "example": "continued2",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 32700
        },
        "end_date": {
          "type": "string",
          "example": "2000-01-01",
          "description": "yyyy-MM-dd",
          "readOnly": true
        },
        "end_time": {
          "type": "string",
          "example": "16:41:49",
          "description": "Assignment end time",
          "readOnly": true
        },
        "primary_delivered_service_id": {
          "type": "string",
          "example": "ABC1234567",
          "readOnly": true,
          "minLength": 10,
          "maxLength": 10
        },
        "document_on_file": {
          "type": "string",
          "example": "N",
          "readOnly": true
        },
        "other_participants": {
          "type": "string",
          "example": "Attorney, Doctor and etc",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 100
        },
        "provided_by": {
          "type": "string",
          "example": "S",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 1
        },
        "provided_by_id": {
          "type": "string",
          "example": "ABC1234567",
          "readOnly": true,
          "minLength": 10,
          "maxLength": 10
        },
        "service_contact": {
          "type": "integer",
          "format": "int32",
          "example": 0,
          "readOnly": true
        },
        "start_date": {
          "type": "string",
          "example": "2000-01-01",
          "description": "yyyy-MM-dd",
          "readOnly": true
        },
        "start_time": {
          "type": "string",
          "example": "16:41:49",
          "description": "Contact end time",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "example": "C",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 1
        },
        "supervision": {
          "type": "string",
          "example": "C",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 1
        },
        "wrap_around_service": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        }
      }
    },
    "LongText": {
      "type": "object",
      "required": [
        "countySpecificCode",
        "textDescription"
      ],
      "properties": {
        "countySpecificCode": {
          "type": "string",
          "example": "57",
          "description": "County code",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 2
        },
        "textDescription": {
          "type": "string",
          "example": "Arrange for parents to have demonstrating home maker come to the home twice a week",
          "description": "Text Description",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 32700
        }
      }
    },
    "InvolvementHistory": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "cases": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/HOICase"
          }
        },
        "referrals": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/HOIReferral"
          }
        },
        "screenings": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/HOIScreening"
          }
        }
      }
    },
    "AllegationList": {
      "type": "object"
    },
    "CmsRecordDescriptor": {
      "type": "object",
      "required": [
        "legacy_id",
        "legacy_table_description",
        "legacy_table_name",
        "legacy_ui_id"
      ],
      "properties": {
        "legacy_id": {
          "type": "string",
          "example": "1234567ABC",
          "description": "CWS/CMS Id",
          "minLength": 0,
          "maxLength": 10
        },
        "legacy_ui_id": {
          "type": "string",
          "example": "1111-2222-3333-4444555",
          "description": "CWS/CMS user interface Id",
          "minLength": 0,
          "maxLength": 19
        },
        "legacy_table_description": {
          "type": "string",
          "example": "Client",
          "description": "CWS/CMS Table Description"
        },
        "legacy_table_name": {
          "type": "string",
          "example": "CLIENT_T",
          "description": "CWS/CMS Table Name"
        }
      }
    },
    "ScreeningSummary": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "1",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "example": "Henderson Screening",
          "readOnly": true
        },
        "decision": {
          "type": "string",
          "example": "promote_to_referral",
          "readOnly": true
        },
        "decision_detail": {
          "type": "string",
          "example": "immediate",
          "readOnly": true
        },
        "safety_alerts": {
          "type": "array",
          "example": "[Dangerous Animal on Premises, Firearms in Home, Severe Mental Health Status]",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "safety_information": {
          "type": "string",
          "example": "The animal at residence is a lion",
          "readOnly": true
        },
        "additional_information": {
          "type": "string",
          "example": "There was excessive evidence of abuse",
          "readOnly": true
        },
        "started_at": {
          "type": "string",
          "format": "date-time",
          "example": "2017-09-01T16:48:05.457Z",
          "readOnly": true
        },
        "allegations": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/SimpleAllegation"
          }
        }
      }
    },
    "PostedStaffPerson": {
      "type": "object",
      "required": [
        "availability_and_location_description",
        "county_code",
        "cws_office",
        "cws_office_address",
        "duty_worker_indicator",
        "first_name",
        "last_name",
        "phone_ext",
        "phone_number",
        "ssrs_licensing_worker_id",
        "start_date",
        "telecommuter_indicator"
      ],
      "properties": {
        "end_date": {
          "type": "string",
          "example": "2016-10-31",
          "description": "yyyy-MM-dd",
          "readOnly": true
        },
        "first_name": {
          "type": "string",
          "example": "John",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 20
        },
        "job_title": {
          "type": "string",
          "example": "Case Worker",
          "description": "Job Title",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 30
        },
        "last_name": {
          "type": "string",
          "example": "Smith",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 25
        },
        "middle_initial": {
          "type": "string",
          "example": "Q",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 1
        },
        "name_prefix": {
          "type": "string",
          "example": "MR.",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 6
        },
        "phone_number": {
          "type": "number",
          "example": 9165551212,
          "readOnly": true
        },
        "phone_ext": {
          "type": "integer",
          "format": "int32",
          "example": 123,
          "readOnly": true
        },
        "start_date": {
          "type": "string",
          "example": "2016-10-31",
          "description": "2016-10-31",
          "readOnly": true
        },
        "name_suffix": {
          "type": "string",
          "example": "SR.",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 4
        },
        "telecommuter_indicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "cws_office": {
          "type": "string",
          "example": "1234567def",
          "description": "IDENTIFIER of CWS_OFFT",
          "readOnly": true,
          "minLength": 10,
          "maxLength": 10
        },
        "availability_and_location_description": {
          "type": "string",
          "example": "some free form text",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 160
        },
        "ssrs_licensing_worker_id": {
          "type": "string",
          "example": "9021",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 4
        },
        "county_code": {
          "type": "string",
          "example": "99",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 2
        },
        "duty_worker_indicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "cws_office_address": {
          "type": "string",
          "example": "1234567ghi",
          "description": "IDENTIFIER of CWSADDRT",
          "readOnly": true,
          "minLength": 10,
          "maxLength": 10
        },
        "email_address": {
          "type": "string",
          "example": "john.q.smith@somedomain.com",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 50
        },
        "county": {
          "type": "string",
          "readOnly": true
        },
        "staff_id": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Reporter": {
      "type": "object",
      "required": [
        "cityName",
        "colltrClientRptrReltnshpType",
        "communicationMethodType",
        "confidentialWaiverIndicator",
        "countySpecificCode",
        "employerName",
        "feedbackRequiredIndicator",
        "firstName",
        "lastName",
        "mandatedReporterIndicator",
        "messagePhoneExtensionNumber",
        "messagePhoneNumber",
        "namePrefixDescription",
        "primaryPhoneExtensionNumber",
        "primaryPhoneNumber",
        "referralId",
        "stateCodeType",
        "streetName",
        "streetNumber",
        "suffixTitleDescription",
        "zipSuffixNumber",
        "zipcode"
      ],
      "properties": {
        "lastUpdatedTime": {
          "type": "string",
          "format": "date-time",
          "example": "2004-03-31T09:45:58.000-0800",
          "description": "Last Updated Time",
          "readOnly": true
        },
        "badgeNumber": {
          "type": "string",
          "example": "ABC123",
          "description": "can only be set if lawEnforcementId also provided",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 6
        },
        "cityName": {
          "type": "string",
          "example": "San Jose",
          "description": "City name",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 20
        },
        "colltrClientRptrReltnshpType": {
          "type": "integer",
          "format": "int32",
          "example": 1234,
          "readOnly": true
        },
        "communicationMethodType": {
          "type": "integer",
          "format": "int32",
          "example": 1234,
          "readOnly": true
        },
        "confidentialWaiverIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "drmsMandatedRprtrFeedback": {
          "type": "string",
          "example": "ABC1234567",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 10
        },
        "employerName": {
          "type": "string",
          "example": "employer name",
          "description": "cannot be set if lawEnforcementId provided",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 35
        },
        "feedbackDate": {
          "type": "string",
          "example": "2000-01-01",
          "description": "yyyy-MM-dd",
          "readOnly": true
        },
        "feedbackRequiredIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "firstName": {
          "type": "string",
          "example": "George",
          "description": "First name",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 20
        },
        "lastName": {
          "type": "string",
          "example": "Jones",
          "description": "Last name",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 25
        },
        "mandatedReporterIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "messagePhoneExtensionNumber": {
          "type": "integer",
          "format": "int32",
          "example": 123,
          "readOnly": true
        },
        "messagePhoneNumber": {
          "type": "integer",
          "format": "int64",
          "example": 1234678,
          "readOnly": true
        },
        "middleInitialName": {
          "type": "string",
          "example": "A",
          "description": "Middle name",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 1
        },
        "namePrefixDescription": {
          "type": "string",
          "example": "ABC123",
          "description": "Name prefix",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 6
        },
        "primaryPhoneNumber": {
          "type": "integer",
          "format": "int64",
          "example": 1234567,
          "readOnly": true
        },
        "primaryPhoneExtensionNumber": {
          "type": "integer",
          "format": "int32",
          "example": 123,
          "readOnly": true
        },
        "stateCodeType": {
          "type": "integer",
          "format": "int32",
          "example": 12,
          "readOnly": true
        },
        "streetName": {
          "type": "string",
          "example": "Main",
          "description": "required if streetNumber provided",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 40
        },
        "streetNumber": {
          "type": "string",
          "example": "123",
          "description": "Street number",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 10
        },
        "suffixTitleDescription": {
          "type": "string",
          "example": "A1",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 4
        },
        "zipcode": {
          "type": "string",
          "example": "08654",
          "readOnly": true
        },
        "referralId": {
          "type": "string",
          "example": "ABC1234567",
          "description": "Referral ID",
          "readOnly": true,
          "minLength": 10,
          "maxLength": 10
        },
        "lawEnforcementId": {
          "type": "string",
          "example": "ABC1236789",
          "description": "cannot be set if employerName provided",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 10
        },
        "zipSuffixNumber": {
          "type": "integer",
          "format": "int32",
          "example": 1234,
          "readOnly": true
        },
        "countySpecificCode": {
          "type": "string",
          "example": "99",
          "description": "County specific code",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 2
        }
      }
    },
    "People": {
      "type": "object",
      "properties": {
        "people": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Person"
          }
        }
      }
    },
    "CmsNSReferral": {
      "type": "object",
      "required": [
        "person",
        "referral"
      ],
      "properties": {
        "referral": {
          "readOnly": true,
          "$ref": "#/definitions/Referral"
        },
        "person": {
          "readOnly": true,
          "$ref": "#/definitions/Person"
        }
      }
    },
    "RaceAndEthnicity": {
      "type": "object",
      "required": [
        "hispanic_origin_code"
      ],
      "properties": {
        "race_codes": {
          "type": "array",
          "example": "['839', '840']",
          "description": "primary races",
          "readOnly": true,
          "items": {
            "type": "object"
          }
        },
        "unable_to_determine_code": {
          "type": "string",
          "example": "A",
          "readOnly": true
        },
        "hispanic_codes": {
          "type": "array",
          "example": "['3164']",
          "description": "other (secondary) races",
          "readOnly": true,
          "items": {
            "type": "object"
          }
        },
        "hispanic_origin_code": {
          "type": "string",
          "example": "X",
          "readOnly": true
        },
        "hispanic_unable_to_determine_code": {
          "type": "string",
          "example": "A",
          "readOnly": true
        }
      }
    },
    "Contact": {
      "type": "object",
      "required": [
        "ended_at",
        "legacy_descriptor",
        "started_at"
      ],
      "properties": {
        "legacy_descriptor": {
          "readOnly": true,
          "$ref": "#/definitions/CmsRecordDescriptor"
        },
        "last_updated_by": {
          "description": "primary contact staff person legacy_descriptor",
          "readOnly": true,
          "$ref": "#/definitions/LastUpdatedBy"
        },
        "started_at": {
          "type": "string",
          "format": "date-time",
          "example": "2010-04-27T23:30:14.000Z",
          "description": "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
          "readOnly": true
        },
        "ended_at": {
          "type": "string",
          "format": "date-time",
          "example": "2010-04-28T23:30:14.000Z",
          "description": "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
          "readOnly": true
        },
        "purpose": {
          "type": "string",
          "example": "433",
          "description": "Delivered Service serviceContactType system code ID e.g)  -> 433 Conduct Client Evaluation ",
          "readOnly": true
        },
        "communication_method": {
          "type": "string",
          "example": "408",
          "description": "Delivered service communication method type system code ID e.g) 408 -> In-Person",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "example": "C",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 1
        },
        "services": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "location": {
          "type": "string",
          "example": "415",
          "description": "Delivered Service contactLocationType system code ID e.g) 415 -> CWS Office",
          "readOnly": true
        },
        "note": {
          "type": "string",
          "example": "detail text",
          "description": "The contact narrative that is entered in two rows in Long Text Table",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 8000
        },
        "people": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/IndividualDeliveredService"
          }
        }
      }
    },
    "CmsDocument": {
      "type": "object",
      "required": [
        "base64Blob",
        "id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "0131351421120020*JONESMF 00004",
          "description": "Value overwritten on POST",
          "minLength": 30,
          "maxLength": 30
        },
        "segmentCount": {
          "type": "integer",
          "format": "int32",
          "example": 1234
        },
        "docLength": {
          "type": "integer",
          "format": "int64",
          "example": 1000
        },
        "docAuth": {
          "type": "string",
          "example": "RAMESHA",
          "minLength": 1,
          "maxLength": 8
        },
        "docServ": {
          "type": "string",
          "example": "D7706001",
          "minLength": 8,
          "maxLength": 8
        },
        "docDate": {
          "type": "string",
          "example": "2000-01-01",
          "description": "yyyy-MM-dd"
        },
        "docTime": {
          "type": "string",
          "example": "19:59:07",
          "description": "HH:mm:ss"
        },
        "docName": {
          "type": "string",
          "example": "1234"
        },
        "compressionMethod": {
          "type": "string",
          "example": "CWSCMP01"
        },
        "base64Blob": {
          "type": "string"
        }
      }
    },
    "GovernmentOrganization": {
      "type": "object",
      "required": [
        "county_id",
        "id",
        "name",
        "type"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "ABC1234567",
          "description": "identifier",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "example": "County Sheriff Dept",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "DEPARTMENT_OF_JUSTICE",
          "readOnly": true
        },
        "county_id": {
          "type": "integer",
          "format": "int32",
          "example": 1094,
          "readOnly": true
        }
      }
    },
    "Ethnicity": {
      "type": "object",
      "properties": {
        "ethnicityType": {
          "type": "string",
          "example": "Unknown",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 50
        },
        "subEthnicity": {
          "type": "string",
          "example": "South American",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 50
        }
      }
    },
    "CrossReport": {
      "type": "object",
      "required": [
        "county",
        "legacy_descriptor",
        "read_only",
        "reported_on"
      ],
      "properties": {
        "legacy_descriptor": {
          "description": "CMS record descriptor",
          "readOnly": true,
          "$ref": "#/definitions/CmsRecordDescriptor"
        },
        "read_only": {
          "type": "boolean",
          "description": "Cross Report is read only",
          "readOnly": true,
          "default": false
        },
        "reported_on": {
          "type": "string",
          "format": "date-time",
          "example": "2017-10-31",
          "description": "Reported on date",
          "readOnly": true
        },
        "communication_method": {
          "type": "string",
          "example": "408",
          "description": "Cross Report communication method type system code ID e.g) 408 -> In-Person",
          "readOnly": true
        },
        "county": {
          "type": "string",
          "example": "34",
          "description": "County where Cross Report were sent",
          "readOnly": true
        },
        "agencies": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/CrossReportAgency"
          }
        }
      }
    },
    "Referral": {
      "type": "object",
      "required": [
        "additionalInfoIncludedCode",
        "anonymousReporterIndicator",
        "applicationForPetitionIndicator",
        "approvalStatusType",
        "caretakersPerpetratorCode",
        "communicationMethodType",
        "countySpecificCode",
        "familyAwarenessIndicator",
        "familyRefusedServicesIndicator",
        "filedSuspectedChildAbuseReporttoLawEnforcementIndicator",
        "govtEntityType",
        "homelessIndicator",
        "legalDefinitionCode",
        "legalRightsNoticeIndicator",
        "limitedAccessCode",
        "openAdequateCaseCode",
        "primaryContactStaffPersonId",
        "receivedDate",
        "receivedTime",
        "referralName",
        "referralResponseType",
        "referredToResourceType",
        "responsibleAgencyCode",
        "specialProjectReferralIndicator",
        "sufficientInformationCode",
        "zippyCreatedIndicator"
      ],
      "properties": {
        "additionalInfoIncludedCode": {
          "type": "boolean",
          "example": false,
          "description": "Y/N",
          "readOnly": true,
          "default": false
        },
        "anonymousReporterIndicator": {
          "type": "boolean",
          "example": false,
          "description": "N",
          "readOnly": true,
          "default": false
        },
        "applicationForPetitionIndicator": {
          "type": "boolean",
          "example": false,
          "description": "N",
          "readOnly": true,
          "default": false
        },
        "approvalNumber": {
          "type": "string",
          "example": "ABC1234567",
          "description": "Approval Number",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 10
        },
        "approvalStatusType": {
          "type": "integer",
          "format": "int32",
          "example": 1234,
          "description": "Approval Status",
          "readOnly": true
        },
        "caretakersPerpetratorCode": {
          "type": "boolean",
          "example": false,
          "description": "Caretakers Perpetrator Code",
          "readOnly": true,
          "default": false
        },
        "closureDate": {
          "type": "string",
          "example": "2000-01-01",
          "description": "yyyy-MM-dd",
          "readOnly": true
        },
        "communicationMethodType": {
          "type": "integer",
          "format": "int32",
          "example": 444,
          "description": "Communication Method",
          "readOnly": true
        },
        "currentLocationOfChildren": {
          "type": "string",
          "example": "ABC1234567",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 10
        },
        "drmsAllegationDescriptionDoc": {
          "type": "string",
          "example": "ABC1234567",
          "minLength": 0,
          "maxLength": 10
        },
        "drmsErReferralDoc": {
          "type": "string",
          "example": "ABC1234567",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 10
        },
        "drmsInvestigationDoc": {
          "type": "string",
          "example": "ABC1234567",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 10
        },
        "filedSuspectedChildAbuseReporttoLawEnforcementIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "familyAwarenessIndicator": {
          "type": "boolean",
          "example": false,
          "description": "N",
          "readOnly": true,
          "default": false
        },
        "govtEntityType": {
          "type": "integer",
          "format": "int32",
          "example": 1234,
          "description": "0",
          "readOnly": true
        },
        "legalDefinitionCode": {
          "type": "string",
          "example": "A",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 1
        },
        "legalRightsNoticeIndicator": {
          "type": "boolean",
          "example": false,
          "description": "N",
          "readOnly": true,
          "default": false
        },
        "limitedAccessCode": {
          "type": "string",
          "example": "S",
          "description": "S = sensitive, R = sealed, N = no restriction",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 1,
          "enum": [
            "S",
            "R",
            "N"
          ]
        },
        "mandatedCrossReportReceivedDate": {
          "type": "string",
          "example": "2000-01-01",
          "description": "yyyy-MM-dd",
          "readOnly": true
        },
        "referralName": {
          "type": "string",
          "example": "ABC123",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 35
        },
        "openAdequateCaseCode": {
          "type": "string",
          "example": "N",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 1
        },
        "receivedDate": {
          "type": "string",
          "example": "2000-01-01",
          "description": "yyyy-MM-dd",
          "readOnly": true
        },
        "receivedTime": {
          "type": "string",
          "example": "16:41:49",
          "readOnly": true
        },
        "referralResponseType": {
          "type": "integer",
          "format": "int32",
          "example": 1234,
          "readOnly": true
        },
        "referredToResourceType": {
          "type": "integer",
          "format": "int32",
          "example": 1234,
          "readOnly": true
        },
        "responseDeterminationDate": {
          "type": "string",
          "example": "2000-01-01",
          "description": "yyyy-MM-dd",
          "readOnly": true
        },
        "responseDeterminationTime": {
          "type": "string",
          "example": "16:41:49",
          "readOnly": true
        },
        "responseRationaleText": {
          "type": "string",
          "example": "ABC1234567",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 10
        },
        "screenerNoteText": {
          "type": "string",
          "example": "ABC1234567",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 10
        },
        "specificsIncludedCode": {
          "type": "string",
          "example": "N",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 1
        },
        "sufficientInformationCode": {
          "type": "string",
          "example": "N",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 1
        },
        "unfoundedSeriesCode": {
          "type": "string",
          "example": "N",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 1
        },
        "linkToPrimaryReferralId": {
          "type": "string",
          "example": "ABC1234567",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 10
        },
        "allegesAbuseOccurredAtAddressId": {
          "type": "string",
          "example": "ABC1234567",
          "description": "alleged abuse occurred at address",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 10
        },
        "firstResponseDeterminedByStaffPersonId": {
          "type": "string",
          "example": "A1A",
          "description": "first response determined by staff person id",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 3
        },
        "primaryContactStaffPersonId": {
          "type": "string",
          "example": "A1A",
          "description": "primary contact staff person id",
          "readOnly": true,
          "minLength": 3,
          "maxLength": 3
        },
        "countySpecificCode": {
          "type": "string",
          "example": "99",
          "description": "County Specific Code",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 2
        },
        "specialProjectReferralIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "zippyCreatedIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "homelessIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "familyRefusedServicesIndicator": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "firstEvaluatedOutApprovalDate": {
          "type": "string",
          "example": "2000-01-01",
          "description": "yyyy-MM-dd",
          "readOnly": true
        },
        "responsibleAgencyCode": {
          "type": "string",
          "example": "C",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 1,
          "enum": [
            "C",
            "P",
            "O",
            "A",
            "S",
            "I",
            "K",
            "M"
          ]
        },
        "limitedAccessGovtAgencyType": {
          "type": "integer",
          "format": "int32",
          "example": 1234,
          "readOnly": true
        },
        "limitedAccessDate": {
          "type": "string",
          "example": "2000-01-01",
          "description": "yyyy-MM-dd",
          "readOnly": true
        },
        "limitedAccessDesc": {
          "type": "string",
          "example": "ABC123",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 254
        },
        "originalClosureDate": {
          "type": "string",
          "example": "2000-01-01",
          "description": "yyyy-MM-dd",
          "readOnly": true
        },
        "uiIdentifier": {
          "type": "string",
          "minLength": 22,
          "maxLength": 22
        },
        "addresses": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Address"
          }
        },
        "reporter": {
          "readOnly": true,
          "$ref": "#/definitions/Reporter"
        },
        "crossReports": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/CmsCrossReport"
          }
        },
        "allegation": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/cmsAllegation"
          }
        },
        "victimClients": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Client"
          }
        },
        "perpetratorClients": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Client"
          }
        }
      }
    },
    "HOISocialWorker": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "111111"
        },
        "first_name": {
          "type": "string",
          "example": "joe"
        },
        "last_name": {
          "type": "string",
          "example": "west"
        },
        "legacy_descriptor": {
          "$ref": "#/definitions/LegacyDescriptor"
        }
      }
    },
    "GovernmentAgency": {
      "type": "object",
      "required": [
        "id",
        "type"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "1234",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "1234",
          "readOnly": true
        }
      }
    },
    "ScreeningToReferral": {
      "type": "object",
      "required": [
        "address",
        "allegations",
        "assignee",
        "assignee_staff_id",
        "communication_method",
        "id",
        "incident_county",
        "legacy_id",
        "limited_access_code",
        "location_type",
        "name",
        "participants",
        "response_time",
        "screening_decision",
        "started_at"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 12345,
          "description": "Screening ID",
          "readOnly": true,
          "minimum": 1
        },
        "legacy_source_table": {
          "type": "string",
          "example": "REFERL_T",
          "description": "Legacy Table",
          "readOnly": true
        },
        "legacy_id": {
          "type": "string",
          "example": "ABC1234567",
          "description": "Legacy Referral Id",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 10
        },
        "ended_at": {
          "type": "string",
          "example": "2016-08-03T01:00:00.000Z",
          "description": "Screening end date/time",
          "readOnly": true
        },
        "incident_county": {
          "type": "string",
          "example": "34",
          "description": "County with primary assignment responsibility for Referral",
          "readOnly": true
        },
        "incident_date": {
          "type": "string",
          "example": "2015-01-13",
          "description": "Incident date",
          "readOnly": true
        },
        "location_type": {
          "type": "string",
          "example": "foster home",
          "description": "Location Type",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 75
        },
        "communication_method": {
          "type": "integer",
          "format": "int32",
          "example": 409,
          "description": "Communication Method",
          "readOnly": true,
          "enum": [
            408,
            409,
            410,
            5375,
            5378
          ]
        },
        "current_location_of_children": {
          "type": "string",
          "example": "At the school",
          "description": "location of the child",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 254
        },
        "name": {
          "type": "string",
          "example": "a referral name",
          "description": "Title/Name of referral",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 35
        },
        "report_narrative": {
          "type": "string",
          "example": "On the evening of...",
          "description": "Report Narrative",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 254
        },
        "reference": {
          "type": "string",
          "example": "reference WXTSKD",
          "description": "Referrence",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 50
        },
        "response_time": {
          "type": "integer",
          "format": "int32",
          "example": 1520,
          "description": "Referral Response Type",
          "readOnly": true
        },
        "started_at": {
          "type": "string",
          "example": "2016-08-03T01:00:00.000Z",
          "description": "Date/time incident started",
          "readOnly": true
        },
        "assignee": {
          "type": "string",
          "example": "Mich Bastow",
          "description": "Assigned social worker",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 50
        },
        "assignee_staff_id": {
          "type": "string",
          "example": "q1p",
          "description": "q1p",
          "readOnly": true,
          "minLength": 3,
          "maxLength": 3
        },
        "additional_information": {
          "type": "string",
          "example": "more information about this referral",
          "description": "Additional Information",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 50
        },
        "screening_decision": {
          "type": "string",
          "example": "Response time",
          "description": "Screening Decision",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 50
        },
        "screening_decision_detail": {
          "type": "string",
          "example": "decision detail",
          "description": "Screening decision detail",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 1500
        },
        "address": {
          "$ref": "#/definitions/nsAddress"
        },
        "participants": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Participant"
          }
        },
        "cross_reports": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/NsCrossReport"
          }
        },
        "allegations": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/nsAllegation"
          }
        },
        "approval_status": {
          "type": "integer",
          "format": "int32",
          "example": 118,
          "description": "Status of the approval",
          "readOnly": true
        },
        "family_awareness": {
          "type": "boolean",
          "example": true,
          "description": "Family is aware of referral",
          "readOnly": true,
          "default": false
        },
        "filed_with_law_enforcement": {
          "type": "boolean",
          "example": false,
          "description": "Filed Cross Report with Law Enforcement",
          "readOnly": true,
          "default": false
        },
        "responsible_agency": {
          "type": "string",
          "example": "C",
          "description": "Responsible Agency Code",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 1,
          "enum": [
            "C",
            "P",
            "O",
            "A",
            "S",
            "I",
            "K",
            "M"
          ]
        },
        "limited_access_code": {
          "type": "string",
          "example": "N",
          "description": "limited access code",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 1
        },
        "limited_access_description": {
          "type": "string",
          "example": "Some text describing the limited access",
          "description": "limited access description",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 254
        },
        "limited_access_agency": {
          "type": "string",
          "example": "The user county",
          "description": "40",
          "readOnly": true
        },
        "limited_access_date": {
          "type": "string",
          "format": "date-time",
          "example": "2000-01-01",
          "description": "yyyy-MM-dd",
          "readOnly": true
        }
      }
    },
    "Relationship": {
      "type": "object",
      "required": [
        "date_of_birth",
        "id",
        "last_name",
        "middle_name",
        "name_suffix",
        "sealed",
        "sensitive"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "ABC1234567",
          "description": "CWS/CMS identifier",
          "readOnly": true,
          "minLength": 10,
          "maxLength": 10
        },
        "date_of_birth": {
          "type": "string",
          "example": "1999-10-01",
          "description": "date of birth",
          "readOnly": true
        },
        "first_name": {
          "type": "string",
          "example": "joe",
          "description": "first name",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 20
        },
        "middle_name": {
          "type": "string",
          "example": "w",
          "description": "middle name",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 20
        },
        "last_name": {
          "type": "string",
          "example": "sufer",
          "description": "last name",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 25
        },
        "name_suffix": {
          "type": "string",
          "description": "Suffix Title Description",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 4
        },
        "sensitive": {
          "type": "boolean",
          "example": false,
          "description": "sensitive",
          "readOnly": true,
          "default": false
        },
        "sealed": {
          "type": "boolean",
          "example": false,
          "description": "sealed",
          "readOnly": true,
          "default": false
        },
        "relationship_to": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/RelationshipTo"
          }
        },
        "legacy_descirptor": {
          "readOnly": true,
          "$ref": "#/definitions/CmsRecordDescriptor"
        }
      }
    },
    "ClientCollateral": {
      "type": "object",
      "required": [
        "activeIndicator",
        "clientId",
        "collateralClientReporterRelationshipType",
        "collateralIndividualId"
      ],
      "properties": {
        "activeIndicator": {
          "type": "string",
          "example": "Y",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 1
        },
        "collateralClientReporterRelationshipType": {
          "type": "integer",
          "format": "int32",
          "example": 573,
          "readOnly": true
        },
        "commentDescription": {
          "type": "string",
          "example": "A",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 50
        },
        "clientId": {
          "type": "string",
          "example": "ABC123",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 10
        },
        "collateralIndividualId": {
          "type": "string",
          "example": "DEF123",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 10
        }
      }
    },
    "Investigation": {
      "type": "object",
      "required": [
        "assignee",
        "communication_method",
        "incident_address",
        "incident_county",
        "incident_date",
        "last_updated_at",
        "last_updated_by",
        "legacy_descriptor",
        "location_type",
        "name",
        "response_time",
        "sealed",
        "sensitive",
        "started_at"
      ],
      "properties": {
        "legacy_descriptor": {
          "readOnly": true,
          "$ref": "#/definitions/CmsRecordDescriptor"
        },
        "last_updated_by": {
          "type": "string",
          "example": "0X5",
          "description": "staff person id",
          "readOnly": true
        },
        "last_updated_at": {
          "type": "string",
          "format": "date-time",
          "example": "2010-10-01T15:26:42.000-0700",
          "description": "Last Updated Time",
          "readOnly": true
        },
        "incident_county": {
          "type": "string",
          "example": "34",
          "description": "County with primary assignment responsibility for Referral/Case",
          "readOnly": true
        },
        "incident_date": {
          "type": "string",
          "format": "date-time",
          "example": "2017-01-13",
          "description": "Incident date",
          "readOnly": true
        },
        "location_type": {
          "type": "string",
          "example": "foster home",
          "description": "Location Type",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 75
        },
        "communication_method": {
          "type": "integer",
          "format": "int32",
          "example": 409,
          "description": "Communication Method",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "example": "Test Case #1",
          "description": "Title/Name of Referral/Case",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 35
        },
        "investigation_summary": {
          "type": "string",
          "example": "On the evening of...",
          "description": "summary of investigation",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 254
        },
        "reference": {
          "type": "string",
          "example": "reference WXTSKD",
          "description": "Referrence",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 50
        },
        "response_time": {
          "type": "integer",
          "format": "int32",
          "example": 1520,
          "description": "Referral Response Type",
          "readOnly": true
        },
        "started_at": {
          "type": "string",
          "format": "date-time",
          "example": "2016-08-03T01:00:00.000Z",
          "description": "Date/time incident started",
          "readOnly": true
        },
        "assignee": {
          "readOnly": true,
          "$ref": "#/definitions/Assignee"
        },
        "additional_information": {
          "type": "string",
          "example": "more information about this investigation",
          "description": "Additional Information",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 50
        },
        "sensitive": {
          "type": "boolean",
          "description": "contains sensitive information",
          "readOnly": true,
          "default": false
        },
        "sealed": {
          "type": "boolean",
          "description": "contains sealed information",
          "readOnly": true,
          "default": false
        },
        "incident_phone_number": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/PhoneNumber"
          }
        },
        "incident_address": {
          "readOnly": true,
          "$ref": "#/definitions/InvestigationAddress"
        },
        "screening_summary": {
          "readOnly": true,
          "$ref": "#/definitions/ScreeningSummary"
        },
        "history_of_involvement": {
          "$ref": "#/definitions/InvolvementHistory"
        },
        "allegations": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Allegation"
          }
        },
        "people": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Person"
          }
        },
        "relationships": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Relationship"
          }
        },
        "safety_alerts": {
          "readOnly": true,
          "$ref": "#/definitions/SafetyAlerts"
        },
        "cross_reports": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "contacts": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Contact"
          }
        }
      }
    },
    "PhoneNumber": {
      "type": "object",
      "required": [
        "extension",
        "number",
        "type"
      ],
      "properties": {
        "number": {
          "type": "integer",
          "format": "int64",
          "example": 9164569939,
          "description": "phone number",
          "readOnly": true
        },
        "extension": {
          "type": "integer",
          "format": "int32",
          "example": 2334,
          "description": "extension",
          "readOnly": true
        },
        "type": {
          "type": "integer",
          "format": "int32",
          "example": 1111,
          "description": "phone number type",
          "readOnly": true
        },
        "legacy_descriptor": {
          "readOnly": true,
          "$ref": "#/definitions/CmsRecordDescriptor"
        }
      }
    },
    "LegacyDescriptor": {
      "type": "object",
      "properties": {
        "legacy_id": {
          "type": "string",
          "example": "1234567ABC",
          "description": "CWS/CMS Id"
        },
        "legacy_ui_id": {
          "type": "string",
          "example": "1111-2222-3333-4444555",
          "description": "CWS/CMS user interface Id"
        },
        "legacy_last_updated": {
          "type": "string",
          "format": "date-time",
          "example": "2010-10-01T15:26:42.000-0700",
          "description": "CWS/CMS Last Updated Time"
        },
        "legacy_table_name": {
          "type": "string",
          "example": "CLIENT_T",
          "description": "CWS/CMS Table Name"
        },
        "legacy_table_description": {
          "type": "string",
          "example": "Client",
          "description": "CWS/CMS Table Description"
        }
      }
    },
    "nsIntakeLovEntry": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "example": "2167",
          "minLength": 0,
          "maxLength": 50
        },
        "value": {
          "type": "string",
          "example": "Dangerous puppy on premises",
          "minLength": 0,
          "maxLength": 50
        },
        "category": {
          "type": "string",
          "example": "safety_alerts",
          "minLength": 0,
          "maxLength": 50
        },
        "sub_category": {
          "type": "string",
          "example": "deadly_baby_animals",
          "minLength": 0,
          "maxLength": 50
        }
      }
    },
    "ErrorMessage": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "CLIENT_CONTRACT",
            "VALIDATION",
            "BUSINESS",
            "DATA_ACCESS"
          ]
        },
        "message": {
          "type": "string"
        },
        "source": {
          "type": "string"
        }
      }
    },
    "PostedScreeningToReferral": {
      "type": "object",
      "required": [
        "address",
        "allegations",
        "assignee",
        "assignee_staff_id",
        "communication_method",
        "id",
        "incident_county",
        "legacy_id",
        "limited_access_code",
        "location_type",
        "name",
        "participants",
        "response_time",
        "screening_decision",
        "started_at"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 12345,
          "description": "Screening ID",
          "readOnly": true,
          "minimum": 1
        },
        "legacy_source_table": {
          "type": "string",
          "example": "REFERL_T",
          "description": "Legacy Table",
          "readOnly": true
        },
        "legacy_id": {
          "type": "string",
          "example": "ABC1234567",
          "description": "Legacy Referral Id",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 10
        },
        "ended_at": {
          "type": "string",
          "example": "2016-08-03T01:00:00.000Z",
          "description": "Screening end date/time",
          "readOnly": true
        },
        "incident_county": {
          "type": "string",
          "example": "34",
          "description": "County with primary assignment responsibility for Referral",
          "readOnly": true
        },
        "incident_date": {
          "type": "string",
          "example": "2015-01-13",
          "description": "Incident date",
          "readOnly": true
        },
        "location_type": {
          "type": "string",
          "example": "foster home",
          "description": "Location Type",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 75
        },
        "communication_method": {
          "type": "integer",
          "format": "int32",
          "example": 409,
          "description": "Communication Method",
          "readOnly": true,
          "enum": [
            408,
            409,
            410,
            5375,
            5378
          ]
        },
        "current_location_of_children": {
          "type": "string",
          "example": "At the school",
          "description": "location of the child",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 254
        },
        "name": {
          "type": "string",
          "example": "a referral name",
          "description": "Title/Name of referral",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 35
        },
        "report_narrative": {
          "type": "string",
          "example": "On the evening of...",
          "description": "Report Narrative",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 254
        },
        "reference": {
          "type": "string",
          "example": "reference WXTSKD",
          "description": "Referrence",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 50
        },
        "response_time": {
          "type": "integer",
          "format": "int32",
          "example": 1520,
          "description": "Referral Response Type",
          "readOnly": true
        },
        "started_at": {
          "type": "string",
          "example": "2016-08-03T01:00:00.000Z",
          "description": "Date/time incident started",
          "readOnly": true
        },
        "assignee": {
          "type": "string",
          "example": "Mich Bastow",
          "description": "Assigned social worker",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 50
        },
        "assignee_staff_id": {
          "type": "string",
          "example": "q1p",
          "description": "q1p",
          "readOnly": true,
          "minLength": 3,
          "maxLength": 3
        },
        "additional_information": {
          "type": "string",
          "example": "more information about this referral",
          "description": "Additional Information",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 50
        },
        "screening_decision": {
          "type": "string",
          "example": "Response time",
          "description": "Screening Decision",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 50
        },
        "screening_decision_detail": {
          "type": "string",
          "example": "decision detail",
          "description": "Screening decision detail",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 1500
        },
        "address": {
          "$ref": "#/definitions/nsAddress"
        },
        "participants": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Participant"
          }
        },
        "cross_reports": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/NsCrossReport"
          }
        },
        "allegations": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/nsAllegation"
          }
        },
        "approval_status": {
          "type": "integer",
          "format": "int32",
          "example": 118,
          "description": "Status of the approval",
          "readOnly": true
        },
        "family_awareness": {
          "type": "boolean",
          "example": true,
          "description": "Family is aware of referral",
          "readOnly": true,
          "default": false
        },
        "filed_with_law_enforcement": {
          "type": "boolean",
          "example": false,
          "description": "Filed Cross Report with Law Enforcement",
          "readOnly": true,
          "default": false
        },
        "responsible_agency": {
          "type": "string",
          "example": "C",
          "description": "Responsible Agency Code",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 1,
          "enum": [
            "C",
            "P",
            "O",
            "A",
            "S",
            "I",
            "K",
            "M"
          ]
        },
        "limited_access_code": {
          "type": "string",
          "example": "N",
          "description": "limited access code",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 1
        },
        "limited_access_description": {
          "type": "string",
          "example": "Some text describing the limited access",
          "description": "limited access description",
          "readOnly": true,
          "minLength": 0,
          "maxLength": 254
        },
        "limited_access_agency": {
          "type": "string",
          "example": "The user county",
          "description": "40",
          "readOnly": true
        },
        "limited_access_date": {
          "type": "string",
          "format": "date-time",
          "example": "2000-01-01",
          "description": "yyyy-MM-dd",
          "readOnly": true
        }
      }
    },
    "FormSchemaDTO": {
      "type": "object",
      "properties": {
        "form_schema_id": {
          "type": "integer",
          "format": "int64"
        },
        "form_name": {
          "type": "string"
        },
        "schema_version": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "json_schema": {
          "$ref": "#/definitions/JsonNode"
        },
        "ui_schema": {
          "$ref": "#/definitions/JsonNode"
        }
      }
    },
    "FormSchemaCollectionDTO": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/FormSchemaDTO"
          }
        }
      }
    },
    "FormCollectionDTO": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/FormInstanceDTO"
          }
        }
      }
    },
    "FormsPackageCollectionDTO": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/FormsPackageDTO"
          }
        }
      }
    },
    "FormInstanceStatusDTO": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "DRAFT",
            "IN_PROGRESS",
            "SUBMITTED"
          ]
        }
      }
    }
  },
  "paths": {
    "/dictionaries/address-types": {
      "get": {
        "tags": [
          "dictionaries"
        ],
        "summary": "Returns Address Types",
        "description": "",
        "operationId": "getAddressTypes",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DictionaryValuesDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/dictionaries/age-groups": {
      "get": {
        "tags": [
          "dictionaries"
        ],
        "summary": "Returns Age Group Types",
        "description": "",
        "operationId": "getDictionaryAgeGroupTypes",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DictionaryValuesDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/dictionaries/applicant-relationship-types": {
      "get": {
        "tags": [
          "dictionaries"
        ],
        "summary": "Returns Applicant Relationship Types",
        "description": "",
        "operationId": "getApplicantRelationshipTypes",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DictionaryValuesDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/dictionaries/counties": {
      "get": {
        "tags": [
          "dictionaries"
        ],
        "summary": "Returns Counties Dictionary Values",
        "description": "",
        "operationId": "getCounties",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DictionaryValuesDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/dictionaries/education-level-types": {
      "get": {
        "tags": [
          "dictionaries"
        ],
        "summary": "Returns Education Level Types",
        "description": "",
        "operationId": "getDictionaryEducationLevelType",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DictionaryValuesDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/dictionaries/ethnicity-types": {
      "get": {
        "tags": [
          "dictionaries"
        ],
        "summary": "Returns Ethnicity Types",
        "description": "",
        "operationId": "getDictionaryEthnicityType",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DictionaryValuesDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/dictionaries/facility-types": {
      "get": {
        "tags": [
          "dictionaries"
        ],
        "summary": "Returns Facility Types",
        "description": "",
        "operationId": "getDictionaryFacilityType",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DictionaryValuesDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/dictionaries/genders": {
      "get": {
        "tags": [
          "dictionaries"
        ],
        "summary": "Returns Genders",
        "description": "",
        "operationId": "getDictionaryGenderTypes",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DictionaryValuesDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/dictionaries/income-types": {
      "get": {
        "tags": [
          "dictionaries"
        ],
        "summary": "Returns Income Types",
        "description": "",
        "operationId": "getIncomeType",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DictionaryValuesDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/dictionaries/languages": {
      "get": {
        "tags": [
          "dictionaries"
        ],
        "summary": "Returns Languages",
        "description": "",
        "operationId": "getDictionaryLanguageTypes",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DictionaryValuesDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/dictionaries/license-types": {
      "get": {
        "tags": [
          "dictionaries"
        ],
        "summary": "Returns License Types",
        "description": "",
        "operationId": "getLicenseTypes",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DictionaryValuesDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/dictionaries/marriage-termination-reasons": {
      "get": {
        "tags": [
          "dictionaries"
        ],
        "summary": "Returns Marriage Termination Reasons",
        "description": "",
        "operationId": "getMarriageTerminationReasons",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DictionaryValuesDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/dictionaries/name-prefix-types": {
      "get": {
        "tags": [
          "dictionaries"
        ],
        "summary": "Returns Name Prefix Dictionary Values",
        "description": "",
        "operationId": "getNamePrefixes",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DictionaryValuesDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/dictionaries/name-suffix-types": {
      "get": {
        "tags": [
          "dictionaries"
        ],
        "summary": "Returns Name Suffix Dictionary Values",
        "description": "",
        "operationId": "getNameSuffixes",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DictionaryValuesDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/dictionaries/name-types": {
      "get": {
        "tags": [
          "dictionaries"
        ],
        "summary": "Returns Name Types",
        "description": "",
        "operationId": "getDictionaryNameTypes",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DictionaryValuesDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/dictionaries/phone-number-types": {
      "get": {
        "tags": [
          "dictionaries"
        ],
        "summary": "Returns Phone Number Types",
        "description": "",
        "operationId": "getPhoneNumberTypes",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DictionaryValuesDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/dictionaries/relationship-to-applicant-types": {
      "get": {
        "tags": [
          "dictionaries"
        ],
        "summary": "Returns Relationships to Applicant",
        "description": "",
        "operationId": "getRelationshipToApplicantType",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DictionaryValuesDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/dictionaries/residence-ownership-types": {
      "get": {
        "tags": [
          "dictionaries"
        ],
        "summary": "Returns Residence Ownership Types",
        "description": "",
        "operationId": "getResidenceOwnershipTypes",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DictionaryValuesDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/dictionaries/school-grades": {
      "get": {
        "tags": [
          "dictionaries"
        ],
        "summary": "Returns School Grade Dictionary Values",
        "description": "",
        "operationId": "getSchoolGrades",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DictionaryValuesDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/dictionaries/sibling-groups": {
      "get": {
        "tags": [
          "dictionaries"
        ],
        "summary": "Returns Sibling Group Types",
        "description": "",
        "operationId": "getSiblingGroupTypes",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DictionaryValuesDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/dictionaries/states": {
      "get": {
        "tags": [
          "dictionaries"
        ],
        "summary": "Returns States",
        "description": "",
        "operationId": "getStateTypes",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DictionaryValuesDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/facilities/{facilityId}": {
      "get": {
        "tags": [
          "facilities"
        ],
        "summary": "Returns Facility by Id",
        "description": "",
        "operationId": "getFacilityById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "facilityId",
            "in": "path",
            "description": "Currently it's PLC_HM_T.IDENTIFIER for CWSCMS or lis_fac_file.fac_nbr for LIS",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FacilityDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "417": {
            "description": "Expectation Failed"
          }
        }
      }
    },
    "/facilities/{facilityId}/children": {
      "get": {
        "tags": [
          "facilities"
        ],
        "summary": "Returns Children collection by Facility Id",
        "description": "",
        "operationId": "getChildren",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "facilityId",
            "in": "path",
            "description": "Currently it's PLC_HM_T.IDENTIFIER for CWSCMS or lis_fac_file.fac_nbr for LIS",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FacilityChildrenDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/facilities/{facilityId}/children/{childId}": {
      "get": {
        "tags": [
          "facilities"
        ],
        "summary": "Returns Child by Facility Id and Child Id",
        "description": "",
        "operationId": "getChild",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "facilityId",
            "in": "path",
            "description": "Currently it's PLC_HM_T.IDENTIFIER for CWSCMS or lis_fac_file.fac_nbr for LIS",
            "required": true,
            "type": "string"
          },
          {
            "name": "childId",
            "in": "path",
            "description": "The id of the Client",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FacilityChildDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/facilities/{facilityId}/complaints": {
      "get": {
        "tags": [
          "facilities"
        ],
        "summary": "Returns Complaints collection by Facility Id",
        "description": "",
        "operationId": "getFacilityComplaintsByFacilityId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "facilityId",
            "in": "path",
            "description": "The id of the Facility",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ComplaintsDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/facilities/{facilityId}/complaints/{complaintId}": {
      "get": {
        "tags": [
          "facilities"
        ],
        "summary": "Returns Complaint by Facility Id and Complaint Id",
        "description": "",
        "operationId": "getFacilityComplaintByFacilityIdAndComplaintId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "facilityId",
            "in": "path",
            "description": "The id of the Facility",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "complaintId",
            "in": "path",
            "description": "The id of the Complaint",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ComplaintDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/facilities/{facilityId}/inspections": {
      "get": {
        "tags": [
          "facilities"
        ],
        "summary": "Returns collection of Inspections by Facility Id",
        "description": "",
        "operationId": "getFacilityInspections",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "facilityId",
            "in": "path",
            "description": "The id of the Facility",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FacilityInspectionsDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/facilities/{facilityId}/inspections/{inspectionId}": {
      "get": {
        "tags": [
          "facilities"
        ],
        "summary": "Returns Inspection by Facility Id and Inspection Id",
        "description": "",
        "operationId": "getFacilityInspectionById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "facilityId",
            "in": "path",
            "description": "The id of the Facility",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "inspectionId",
            "in": "path",
            "description": "The id of the Inspection",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FacilityInspectionDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/placement-homes": {
      "post": {
        "tags": [
          "placement-homes"
        ],
        "summary": "Saves and returns Forms Package for Placement Home",
        "description": "",
        "operationId": "saveFormsPackage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "formsPackage",
            "description": "The FormsPackageDTO object",
            "required": false,
            "schema": {
              "$ref": "#/definitions/FormsPackageDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FormsPackageDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/placement-homes/{id}": {
      "get": {
        "tags": [
          "placement-homes"
        ],
        "summary": "Returns PlacementHome in Package representation",
        "description": "",
        "operationId": "getPlacementhome",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Placementhome to find",
            "required": true,
            "type": "string",
            "x-example": "AaQshqm0Mb"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FormsPackageDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/rfa-1a-forms": {
      "get": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Returns all available RFA 1A Forms",
        "description": "",
        "operationId": "getAllApplicationForms",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "expanded",
            "in": "query",
            "description": "Use 'true' to get forms with all parts of form included",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RFA1aFormCollectionDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "post": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Creates and returns RFA 1A Form",
        "description": "",
        "operationId": "createApplicationForm",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "application",
            "description": "The RFA-1A Application object",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RFA1aFormDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RFA1aFormDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/rfa-1a-forms/{applicationId}": {
      "get": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Returns RFA 1A Form by Id",
        "description": "",
        "operationId": "getApplicationForm",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/pdf"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "expanded",
            "in": "query",
            "description": "Use 'true' to get form with all parts of form included",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RFA1aFormDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "put": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Updates RFA 1A Form",
        "description": "",
        "operationId": "updateApplicationForm",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "application",
            "description": "The RFA-1A Application object",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RFA1aFormDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RFA1aFormDTO"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/rfa-1a-forms/{applicationId}/adoption-history": {
      "get": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Returns Adoption History by RFA-1A Form Id",
        "description": "",
        "operationId": "getAdoptionHistory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AdoptionHistoryDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "put": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Update Adoption History in RFA 1A Form",
        "description": "",
        "operationId": "updateAdoptionHistory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "adoptionHistory",
            "description": "The RFA-1a Adoption History object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdoptionHistoryDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AdoptionHistoryDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/rfa-1a-forms/{applicationId}/applicants": {
      "get": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Returns RFA 1A Form's Applicants by Form Id",
        "description": "",
        "operationId": "getApplicantsByFormId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApplicantCollectionDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "post": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Creates and returns RFA 1A Applicant",
        "description": "",
        "operationId": "createApplicant",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "applicant",
            "description": "The RFA-1A Applicant object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicantDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApplicantDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/rfa-1a-forms/{applicationId}/applicants-declaration": {
      "get": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Returns Applicants Declaration by RFA-1A Form Id",
        "description": "",
        "operationId": "getApplicantsDeclaration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApplicantsDeclarationDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "put": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Update Applicants Declaration in RFA 1A Form",
        "description": "",
        "operationId": "updateApplicantsDeclaration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "residence",
            "description": "The RFA-1A Applicants Declaration object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicantsDeclarationDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApplicantsDeclarationDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/rfa-1a-forms/{applicationId}/applicants-history": {
      "get": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Returns Applicants History by RFA-1A Form Id",
        "description": "",
        "operationId": "getApplicantsHistory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApplicantsHistoryDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "put": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Update Applicants History in RFA 1A Form",
        "description": "",
        "operationId": "updateApplicantsHistory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "applicants-history",
            "description": "The RFA-1A ApplicantsHistory object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicantsHistoryDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApplicantsHistoryDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/rfa-1a-forms/{applicationId}/applicants-relationship": {
      "get": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Returns RFA-1A Form Applicants Relationship",
        "description": "",
        "operationId": "getApplicantsRelationship",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApplicantsRelationshipDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "put": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Updates Applicants Relationship in RFA 1A Form",
        "description": "",
        "operationId": "updateApplicantsRelationship",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "applicants-relationship",
            "description": "The Applicants relationship object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicantsRelationshipDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApplicantsRelationshipDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/rfa-1a-forms/{applicationId}/applicants/{applicantId}": {
      "get": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Returns RFA 1A Form's Applicant by Id",
        "description": "",
        "operationId": "getApplicantById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "applicantId",
            "in": "path",
            "description": "The RFA-1A Applicant Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApplicantDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "put": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Update and returns RFA 1A Applicant",
        "description": "",
        "operationId": "updateApplicant",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "applicantId",
            "in": "path",
            "description": "The RFA-1A Applicant Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "applicant",
            "description": "The RFA-1A Applicant object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicantDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApplicantDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "delete": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Delete RFA 1A Form's Applicant by Id",
        "description": "",
        "operationId": "deleteApplicant",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "applicantId",
            "in": "path",
            "description": "The RFA-1A Applicant Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/rfa-1a-forms/{applicationId}/child-desired": {
      "get": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Returns Desired Child preferences by RFA-1A Form Id",
        "description": "",
        "operationId": "getChildDesired",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ChildDesiredDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "put": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Update Desired Child Preferences in RFA 1A Form",
        "description": "",
        "operationId": "updateDesiredChild",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "child-desired",
            "description": "The RFA-1A Child Desired object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChildDesiredDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ChildDesiredDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/rfa-1a-forms/{applicationId}/documentId": {
      "get": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Returns RFA 1A generated document (PDF) Id by application Id",
        "description": "",
        "operationId": "getGeneratedDocumentId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/rfa-1a-forms/{applicationId}/lic-198b-forms": {
      "get": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Returns LIC-198b Forms by Application Id",
        "description": "",
        "operationId": "getLIC198bFormsByFormRFA1aFormId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Application Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LIC198bFormCollectionDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/rfa-1a-forms/{applicationId}/lic-198b-forms/applicants/{applicantId}": {
      "get": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Returns LIC-198b Form for Applicant",
        "description": "",
        "operationId": "getLIC198bFormForApplicant",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "applicantId",
            "in": "path",
            "description": "The Applicant Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LIC198bFormDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "post": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Creates and returns LIC-198b form for Applicant",
        "description": "",
        "operationId": "createLIC198bFormForApplicant",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "applicantId",
            "in": "path",
            "description": "The Applicant Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "lic-198b-form",
            "description": "The LIC-198b Form object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LIC198bFormDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LIC198bFormDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/rfa-1a-forms/{applicationId}/lic-198b-forms/other-adults/{otherAdultId}": {
      "get": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Returns LIC-198b Form for Other Adult",
        "description": "",
        "operationId": "getLIC198bFormForOtherAdult",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "otherAdultId",
            "in": "path",
            "description": "The Other Adult Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LIC198bFormDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "post": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Creates and returns LIC-198b form for OtherAdult",
        "description": "",
        "operationId": "createLIC198bFormForOtherAdult",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "otherAdultId",
            "in": "path",
            "description": "The OtherAdult Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "lic-198b-form",
            "description": "The LIC-198b Form object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LIC198bFormDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LIC198bFormDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/rfa-1a-forms/{applicationId}/lic-198b-forms/{lic198bFormId}": {
      "get": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Returns LIC-198b Form by RFA-1A id and LIC-198b id",
        "description": "",
        "operationId": "getLIC198bFormById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Application Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "lic198bFormId",
            "in": "path",
            "description": "The LIC-198b Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LIC198bFormDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "put": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Updates and returns LIC-198b Form object",
        "description": "",
        "operationId": "updateLIC198bForm",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Application Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "lic198bFormId",
            "in": "path",
            "description": "The LIC-198b Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "lic-198b-form",
            "description": "The LIC-198b Form object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LIC198bFormDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LIC198bFormDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "delete": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Deletes LIC-198b Form",
        "description": "",
        "operationId": "deleteLIC198bForm",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA 1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "lic198bFormId",
            "in": "path",
            "description": "The LIC-198b Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/rfa-1a-forms/{applicationId}/minor-children": {
      "get": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Returns RFA 1A Form's MinorChild by Application Id",
        "description": "",
        "operationId": "getMinorChildByFormId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Application Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/MinorChildrenCollectionDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "post": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Creates and returns RFA 1A MinorChild object",
        "description": "",
        "operationId": "createMinorChild",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "minorChild",
            "description": "The RFA-1A MinorChild object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MinorChildDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/MinorChildDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/rfa-1a-forms/{applicationId}/minor-children/{minorChildId}": {
      "get": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Returns RFA 1A Form's MinorChild by Id",
        "description": "",
        "operationId": "getMinorChildById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Application Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "minorChildId",
            "in": "path",
            "description": "The RFA-1A MinorChild Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/MinorChildDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "put": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Update and returns RFA 1A MinorChild object",
        "description": "",
        "operationId": "updateMinorChild",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Application Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "minorChildId",
            "in": "path",
            "description": "The RFA-1A MinorChild Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "minorChild",
            "description": "The RFA-1A MinorChild object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MinorChildDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/MinorChildDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "delete": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Delete RFA 1A Form's MinorChild by Id",
        "description": "",
        "operationId": "deleteMinorChild",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "minorChildId",
            "in": "path",
            "description": "The RFA-1A MinorChild Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/rfa-1a-forms/{applicationId}/other-adults": {
      "get": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Returns RFA 1A Form's Other Adults by Application Id",
        "description": "",
        "operationId": "getOtherAdultsByFormId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Application Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/OtherAdultCollectionDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "post": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Creates and returns RFA 1A Other Adult object",
        "description": "",
        "operationId": "createOtherAdult",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "otherAdult",
            "description": "The RFA-1A OtherAdult object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OtherAdultDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/OtherAdultDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/rfa-1a-forms/{applicationId}/other-adults/{otherAdultId}": {
      "get": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Returns RFA 1A Form's OtherAdult by Id",
        "description": "",
        "operationId": "getOtherAdultById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Application Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "otherAdultId",
            "in": "path",
            "description": "The RFA-1A OtherAdult Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/OtherAdultDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "put": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Update and returns RFA 1A OtherAdult object",
        "description": "",
        "operationId": "updateMinorChild",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Application Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "otherAdultId",
            "in": "path",
            "description": "The RFA-1A OtherAdult Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "otherAdult",
            "description": "The RFA-1A OtherAdult object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OtherAdultDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/OtherAdultDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "delete": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Delete RFA 1A Form's OtherAdult by Id",
        "description": "",
        "operationId": "deleteOtherAdult",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "otherAdultId",
            "in": "path",
            "description": "The RFA-1A OtherAdult Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/rfa-1a-forms/{applicationId}/references": {
      "get": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Returns References by RFA-1A Form Id",
        "description": "",
        "operationId": "getReferences",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ReferencesDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "put": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Update References in RFA 1A Form",
        "description": "",
        "operationId": "updateReferences",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "residence",
            "description": "The RFA-1A References object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReferencesDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ReferencesDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/rfa-1a-forms/{applicationId}/residence": {
      "get": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Returns Residence by RFA-1A Form Id",
        "description": "",
        "operationId": "getResidence",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResidenceDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "put": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Update Residence in RFA 1a Form",
        "description": "",
        "operationId": "updateResidence",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "residence",
            "description": "The RFA-1A Residence object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResidenceDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResidenceDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/rfa-1a-forms/{applicationId}/rfa-1b-forms": {
      "get": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Returns RFA 1B Forms by Application Id",
        "description": "",
        "operationId": "getRFA1bFormsByFormRFA1aFormId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Application Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RFA1bFormCollectionDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/rfa-1a-forms/{applicationId}/rfa-1b-forms/applicants/{applicantId}": {
      "get": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Returns RFA 1B Form for Applicant",
        "description": "",
        "operationId": "getRFA1bFormForApplicant",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "applicantId",
            "in": "path",
            "description": "The Applicant Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RFA1bFormDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "post": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Creates and returns RFA 1B form for Applicant",
        "description": "",
        "operationId": "createRFA1bFormForApplicant",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "applicantId",
            "in": "path",
            "description": "The Applicant Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "rfa1bForm",
            "description": "The RFA-1B Form object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RFA1bFormDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RFA1bFormDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/rfa-1a-forms/{applicationId}/rfa-1b-forms/other-adults/{otherAdultId}": {
      "get": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Returns RFA 1B Form for Other Adult",
        "description": "",
        "operationId": "getRFA1bFormForOtherAdult",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "otherAdultId",
            "in": "path",
            "description": "The Other Adult Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RFA1bFormDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "post": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Creates and returns RFA 1B form for OtherAdult",
        "description": "",
        "operationId": "createRFA1bFormForOtherAdult",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "otherAdultId",
            "in": "path",
            "description": "The OtherAdult Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "rfa1bForm",
            "description": "The RFA-1B Form object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RFA1bFormDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RFA1bFormDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/rfa-1a-forms/{applicationId}/rfa-1b-forms/{rfa1bFormId}": {
      "get": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Returns RFA 1B Form by RFA 1A id and RFA 1B id",
        "description": "",
        "operationId": "getRFA1BFormById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Application Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "rfa1bFormId",
            "in": "path",
            "description": "The RFA 1B Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RFA1bFormDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "put": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Updates and returns RFA 1B Form object",
        "description": "",
        "operationId": "updateRFA1bForm",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Application Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "rfa1bFormId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "rfa1bForm",
            "description": "The RFA-1B Form object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RFA1bFormDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RFA1bFormDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "delete": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Deletes RFA 1B Form",
        "description": "",
        "operationId": "deleteRFA1bForm",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA 1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "rfa1bFormId",
            "in": "path",
            "description": "The RFA 1B Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/rfa-1a-forms/{applicationId}/rfa-1c-forms": {
      "get": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Returns RFA 1C Form by Application Id",
        "description": "",
        "operationId": "getRFA1cFormByFormRFA1aFormId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Application Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RFA1cFormDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "post": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Creates and returns RFA 1C Form",
        "description": "",
        "operationId": "createRFA1cForm",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "rfa1cForm",
            "description": "The RFA-1C Form object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RFA1cFormDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RFA1cFormDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/rfa-1a-forms/{applicationId}/rfa-1c-forms/{rfa1cFormId}": {
      "get": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Returns RFA 1C Form by RFA 1A id and RFA 1C id",
        "description": "",
        "operationId": "getRFA1CFormById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Application Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "rfa1cFormId",
            "in": "path",
            "description": "The RFA 1C Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RFA1cFormDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "put": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Updates and returns RFA 1C Form object",
        "description": "",
        "operationId": "updateRFA1cForm",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1a Application Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "rfa1cFormId",
            "in": "path",
            "description": "The RFA-1C Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "rfa1cForm",
            "description": "The RFA-1C Form object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RFA1cFormDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RFA1cFormDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "delete": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Deletes RFA 1C Form",
        "description": "",
        "operationId": "deleteRFA1cForm",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA 1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "rfa1cFormId",
            "in": "path",
            "description": "The RFA 1C Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/rfa-1a-forms/{applicationId}/status": {
      "get": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Get RFA application status",
        "description": "",
        "operationId": "getApplicationStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RFAApplicationStatusDTO"
            }
          }
        }
      },
      "post": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Changes application status",
        "description": "",
        "operationId": "changeApplicationStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "status",
            "description": "New Application status",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RFAApplicationStatusDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Application status has been changed successfully"
          },
          "304": {
            "description": "Application status is the same as previous"
          },
          "400": {
            "description": "Application status can not be changed to requested one"
          },
          "422": {
            "description": "Validation exception fired"
          }
        }
      }
    },
    "/rfa-packet/{applicationId}/summary": {
      "get": {
        "tags": [
          "rfa-1abc"
        ],
        "summary": "Returns RFA Packet summary by RFA-1A Form Id",
        "description": "",
        "operationId": "getRFAPacketSummary",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The RFA-1A Form Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PacketDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/system-information": {
      "get": {
        "tags": [
          "system-information"
        ],
        "summary": "Returns System Information",
        "description": "",
        "operationId": "get",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SystemInformationDTO"
            }
          }
        }
      }
    },
    "/_allegationPerpetratorHistory": {
      "post": {
        "tags": [
          "_allegationPerpetratorHistory"
        ],
        "summary": "Create AllegationPerpetratorHistory",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AllegationPerpetratorHistory"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AllegationPerpetratorHistory"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          },
          "422": {
            "description": "Unable to validate AllegationPerpetratorHistory"
          }
        }
      }
    },
    "/_allegationPerpetratorHistory/{id}": {
      "get": {
        "tags": [
          "_allegationPerpetratorHistory"
        ],
        "summary": "Find allegationPerpetratorHistory by id",
        "description": "",
        "operationId": "get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the AllegationPerpetratorHistory to find",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AllegationPerpetratorHistory"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "put": {
        "tags": [
          "_allegationPerpetratorHistory"
        ],
        "summary": "Update AllegationPerpetratorHistory",
        "description": "",
        "operationId": "update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the AllegationPerpetratorHistory to update",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AllegationPerpetratorHistory"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "not found"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "422": {
            "description": "Unable to validate AllegationPerpetratorHistory"
          }
        }
      },
      "delete": {
        "tags": [
          "_allegationPerpetratorHistory"
        ],
        "summary": "Delete AllegationPerpetratorHistory",
        "description": "",
        "operationId": "delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of AllegationPerpetratorHistory to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Not Authorized"
          }
        }
      }
    },
    "/_allegations": {
      "post": {
        "tags": [
          "_allegations"
        ],
        "summary": "Create Allegation",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmsAllegation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/cmsAllegation"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          },
          "422": {
            "description": "Unable to validate Allegation"
          }
        }
      }
    },
    "/_allegations/{id}": {
      "get": {
        "tags": [
          "_allegations"
        ],
        "summary": "Find allegation by id",
        "description": "",
        "operationId": "get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Allegation to find",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/cmsAllegation"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "put": {
        "tags": [
          "_allegations"
        ],
        "summary": "Update Allegation",
        "description": "",
        "operationId": "update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Allegation to update",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/cmsAllegation"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "not found"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "422": {
            "description": "Unable to validate Allegation"
          }
        }
      },
      "delete": {
        "tags": [
          "_allegations"
        ],
        "summary": "Delete Allegation",
        "description": "",
        "operationId": "delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of Allegation to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Not Authorized"
          }
        }
      }
    },
    "/_assignments": {
      "post": {
        "tags": [
          "_assignments"
        ],
        "summary": "Create Assignment",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Assignment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Assignment"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          },
          "422": {
            "description": "Unable to validate Assignment"
          }
        }
      }
    },
    "/_assignments/{id}": {
      "get": {
        "tags": [
          "_assignments"
        ],
        "summary": "Find assignment by id",
        "description": "",
        "operationId": "get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Assignment to find",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Assignment"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "put": {
        "tags": [
          "_assignments"
        ],
        "summary": "Update Assignment",
        "description": "",
        "operationId": "update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Assignment to update",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Assignment"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "not found"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "422": {
            "description": "Unable to validate Assignment"
          }
        }
      },
      "delete": {
        "tags": [
          "_assignments"
        ],
        "summary": "Delete Assignment",
        "description": "",
        "operationId": "delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of Assignment to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Not Authorized"
          }
        }
      }
    },
    "/_childClients": {
      "post": {
        "tags": [
          "_childClients"
        ],
        "summary": "Create ChildClient",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChildClient"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ChildClient"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          },
          "422": {
            "description": "Unable to validate ChildClient"
          }
        }
      },
      "put": {
        "tags": [
          "_childClients"
        ],
        "summary": "Update ChildClient",
        "description": "",
        "operationId": "update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChildClient"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "not found"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "422": {
            "description": "Unable to validate ChildClient"
          }
        }
      }
    },
    "/_childClients/victimId={victimId}": {
      "get": {
        "tags": [
          "_childClients"
        ],
        "summary": "Find childClient by victimId",
        "description": "",
        "operationId": "get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "victimId",
            "in": "path",
            "description": "The victim id",
            "required": true,
            "type": "string",
            "x-example": "td89slaz98"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ChildClient"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "delete": {
        "tags": [
          "_childClients"
        ],
        "summary": "Delete ChildClient",
        "description": "",
        "operationId": "delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "victimId",
            "in": "path",
            "description": "The victim id",
            "required": true,
            "type": "string",
            "x-example": "td89slaz98"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Not Authorized"
          }
        }
      }
    },
    "/_clients": {
      "post": {
        "tags": [
          "_clients"
        ],
        "summary": "Create Client",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Client"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Client"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          },
          "422": {
            "description": "Unable to validate Client"
          }
        }
      }
    },
    "/_clients/{id}": {
      "get": {
        "tags": [
          "_clients"
        ],
        "summary": "Find client by id",
        "description": "",
        "operationId": "get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Client to find",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Client"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "put": {
        "tags": [
          "_clients"
        ],
        "summary": "Update Client",
        "description": "",
        "operationId": "update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Client to update",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Client"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "not found"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "422": {
            "description": "Unable to validate Client"
          }
        }
      },
      "delete": {
        "tags": [
          "_clients"
        ],
        "summary": "Delete Client",
        "description": "",
        "operationId": "delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of Client to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Not Authorized"
          }
        }
      }
    },
    "/_cmsreferrals": {
      "post": {
        "tags": [
          "_cmsreferrals"
        ],
        "summary": "Create CmsReferral",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CmsReferral"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CmsReferral"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          },
          "422": {
            "description": "Unable to validate CmsReferral"
          }
        }
      }
    },
    "/_crossReports": {
      "post": {
        "tags": [
          "_crossReports"
        ],
        "summary": "Create CrossReport",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CmsCrossReport"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CmsCrossReport"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          },
          "422": {
            "description": "Unable to validate CrossReport"
          }
        }
      },
      "put": {
        "tags": [
          "_crossReports"
        ],
        "summary": "Update CrossReport",
        "description": "",
        "operationId": "update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CmsCrossReport"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "not found"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "422": {
            "description": "Unable to validate CrossReport"
          }
        }
      }
    },
    "/_crossReports/thirdId={thirdId}": {
      "get": {
        "tags": [
          "_crossReports"
        ],
        "summary": "Find crossreport by referral id and third id",
        "description": "",
        "operationId": "get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "thirdId",
            "in": "path",
            "description": "The third id",
            "required": true,
            "type": "string",
            "x-example": "td89slaz98"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CmsCrossReport"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "delete": {
        "tags": [
          "_crossReports"
        ],
        "summary": "Delete CrossReport",
        "description": "",
        "operationId": "delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "thirdId",
            "in": "path",
            "description": "The third id",
            "required": true,
            "type": "string",
            "x-example": "td89slaz98"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Not Authorized"
          }
        }
      }
    },
    "/_drmsDocument": {
      "post": {
        "tags": [
          "_drmsDocument"
        ],
        "summary": "Create drmsDocument",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DrmsDocument"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DrmsDocument"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          },
          "422": {
            "description": "Unable to validate drmsDocument"
          }
        }
      }
    },
    "/_longText": {
      "post": {
        "tags": [
          "_longText"
        ],
        "summary": "Create LongText",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LongText"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LongText"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          },
          "422": {
            "description": "Unable to validate LongText"
          }
        }
      }
    },
    "/_longText/{id}": {
      "get": {
        "tags": [
          "_longText"
        ],
        "summary": "Find LongText by id",
        "description": "",
        "operationId": "get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the LongText to find",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LongText"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "put": {
        "tags": [
          "_longText"
        ],
        "summary": "Update LongText",
        "description": "",
        "operationId": "update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the LongText to update",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LongText"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "not found"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "422": {
            "description": "Unable to validate LongText"
          }
        }
      },
      "delete": {
        "tags": [
          "_longText"
        ],
        "summary": "Delete LongText",
        "description": "",
        "operationId": "delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of LongText to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Not Authorized"
          }
        }
      }
    },
    "/_referralClients": {
      "post": {
        "tags": [
          "_referralClients"
        ],
        "summary": "Create Referral Client",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReferralClient"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          },
          "422": {
            "description": "Unable to validate Referral"
          }
        }
      },
      "put": {
        "tags": [
          "_referralClients"
        ],
        "summary": "Update Referra lClient",
        "description": "",
        "operationId": "update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReferralClient"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "not found"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "422": {
            "description": "Unable to validate Referral Client"
          }
        }
      }
    },
    "/_referralClients/referralId={referralId},clientId={clientId}": {
      "get": {
        "tags": [
          "_referralClients"
        ],
        "summary": "Find Referral Client by composite id of referralId and clientId",
        "description": "",
        "operationId": "get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "referralId",
            "in": "path",
            "description": "The referral id",
            "required": true,
            "type": "string",
            "x-example": "abcdefghif"
          },
          {
            "name": "clientId",
            "in": "path",
            "description": "The client id",
            "required": true,
            "type": "string",
            "x-example": "td89slaz98"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ReferralClient"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "delete": {
        "tags": [
          "_referralClients"
        ],
        "summary": "Delete Referral Client by composite id of referralId and clientId",
        "description": "",
        "operationId": "delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "referralId",
            "in": "path",
            "description": "The referral id",
            "required": true,
            "type": "string",
            "x-example": "abcdefghif"
          },
          {
            "name": "clientId",
            "in": "path",
            "description": "The client id",
            "required": true,
            "type": "string",
            "x-example": "td89slaz98"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Not Authorized"
          }
        }
      }
    },
    "/_referrals": {
      "post": {
        "tags": [
          "_referrals"
        ],
        "summary": "Create Referral",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Referral"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Referral"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          },
          "422": {
            "description": "Unable to validate Referral"
          }
        }
      }
    },
    "/_referrals/{id}": {
      "get": {
        "tags": [
          "_referrals"
        ],
        "summary": "Find referral by id",
        "description": "",
        "operationId": "get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Referral to find",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Referral"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "put": {
        "tags": [
          "_referrals"
        ],
        "summary": "Update Referral",
        "description": "",
        "operationId": "update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Referral to update",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Referral"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "not found"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "422": {
            "description": "Unable to validate Referral"
          }
        }
      },
      "delete": {
        "tags": [
          "_referrals"
        ],
        "summary": "Delete Referral",
        "description": "",
        "operationId": "delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of Referral to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Not Authorized"
          }
        }
      }
    },
    "/_reporters": {
      "post": {
        "tags": [
          "_reporters"
        ],
        "summary": "Create Reporter",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Reporter"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Reporter"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          },
          "422": {
            "description": "Unable to validate Reporter"
          }
        }
      }
    },
    "/_reporters/referralId={referralId}": {
      "get": {
        "tags": [
          "_reporters"
        ],
        "summary": "Find reporter by referral id",
        "description": "",
        "operationId": "get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "referralId",
            "in": "path",
            "description": "The referral id",
            "required": true,
            "type": "string",
            "x-example": "abcdefghif"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Reporter"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "put": {
        "tags": [
          "_reporters"
        ],
        "summary": "Update Reporter",
        "description": "",
        "operationId": "update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "referralId",
            "in": "path",
            "description": "The referral id",
            "required": true,
            "type": "string",
            "x-example": "abcdefghif"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Reporter"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "not found"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "422": {
            "description": "Unable to validate Reporter"
          }
        }
      },
      "delete": {
        "tags": [
          "_reporters"
        ],
        "summary": "Delete Reporter",
        "description": "",
        "operationId": "delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "referralId",
            "in": "path",
            "description": "The referral id",
            "required": true,
            "type": "string",
            "x-example": "abcdefghif"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Not Authorized"
          }
        }
      }
    },
    "/_staffpersons": {
      "post": {
        "tags": [
          "_staffpersons"
        ],
        "summary": "Create StaffPerson",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StaffPerson"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StaffPerson"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          },
          "422": {
            "description": "Unable to validate StaffPerson"
          }
        }
      }
    },
    "/_staffpersons/{id}": {
      "get": {
        "tags": [
          "_staffpersons"
        ],
        "summary": "Find staffperson by id",
        "description": "",
        "operationId": "get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the StaffPerson to find",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StaffPerson"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "put": {
        "tags": [
          "_staffpersons"
        ],
        "summary": "Update StaffPerson",
        "description": "",
        "operationId": "update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the StaffPerson to update",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StaffPerson"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "not found"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "422": {
            "description": "Unable to validate StaffPerson"
          }
        }
      },
      "delete": {
        "tags": [
          "_staffpersons"
        ],
        "summary": "Delete StaffPerson",
        "description": "",
        "operationId": "delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of StaffPerson to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Not Authorized"
          }
        }
      }
    },
    "/address_validation": {
      "post": {
        "tags": [
          "address_validation"
        ],
        "summary": "Create Address",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/nsAddress"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ValidatedAddress"
              }
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "422": {
            "description": "Unable to validate Address"
          }
        }
      }
    },
    "/addresses": {
      "post": {
        "tags": [
          "addresses"
        ],
        "summary": "Create Address",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/nsAddress"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/nsAddress"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          },
          "422": {
            "description": "Unable to validate Address"
          }
        }
      }
    },
    "/addresses/{id}": {
      "get": {
        "tags": [
          "addresses"
        ],
        "summary": "Find Address by id",
        "description": "",
        "operationId": "get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Address to find",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/nsAddress"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/client_collaterals": {
      "post": {
        "tags": [
          "client_collaterals"
        ],
        "summary": "Create Client Collateral",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClientCollateral"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PostedClientCollateral"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          },
          "422": {
            "description": "Unable to validate Client Collateral"
          }
        }
      }
    },
    "/client_collaterals/{id}": {
      "get": {
        "tags": [
          "client_collaterals"
        ],
        "summary": "Find Client Collateral by id",
        "description": "",
        "operationId": "get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Client Collateral to find",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PostedClientCollateral"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/cms_ns_referrals": {
      "post": {
        "tags": [
          "cms_ns_referrals"
        ],
        "summary": "Create CmsNSReferral",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CmsNSReferral"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CmsNSReferral"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          },
          "422": {
            "description": "Unable to validate CmsReferral"
          }
        }
      }
    },
    "/cms_ui_id": {
      "get": {
        "tags": [
          "cms_ui_id"
        ],
        "summary": "Convert legacy 10-char key to 19-digit UI identifier",
        "description": "",
        "operationId": "legacyKeyToUIIdentifer",
        "consumes": [
          "text/plain"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "required": true,
            "type": "string",
            "x-example": "U2Gaygg0Ki"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LegacyKeyResponse"
            }
          },
          "400": {
            "description": "Unable to parse parameters"
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/cmsdocreferralclient": {
      "post": {
        "tags": [
          "cmsdocreferralclient"
        ],
        "summary": "Create Document",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CmsDocReferralClient"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CmsDocReferralClient"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          },
          "422": {
            "description": "Unable to validate Document"
          }
        }
      }
    },
    "/cmsdocreferralclient/{id}": {
      "get": {
        "tags": [
          "cmsdocreferralclient"
        ],
        "summary": "Find document by id (doc_handle)",
        "description": "",
        "operationId": "get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id (doc_handle) of the Document to find",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CmsDocReferralClient"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/cmsdocument": {
      "post": {
        "tags": [
          "cmsdocument"
        ],
        "summary": "Create Document",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CmsDocument"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CmsDocument"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          },
          "422": {
            "description": "Unable to validate Document"
          }
        }
      }
    },
    "/cmsdocument/{id}": {
      "get": {
        "tags": [
          "cmsdocument"
        ],
        "summary": "Find document by id (doc_handle)",
        "description": "",
        "operationId": "get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id (doc_handle) of the Document to find",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CmsDocument"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "put": {
        "tags": [
          "cmsdocument"
        ],
        "summary": "Update Document",
        "description": "",
        "operationId": "update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Document id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CmsDocument"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CmsDocument"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "not found"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "422": {
            "description": "Unable to validate Document"
          }
        }
      },
      "delete": {
        "tags": [
          "cmsdocument"
        ],
        "summary": "Delete Document",
        "description": "",
        "operationId": "delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of Document to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Not Authorized"
          }
        }
      }
    },
    "/contacts": {
      "post": {
        "tags": [
          "contacts"
        ],
        "summary": "Create deliveredService",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeliveredServiceDomain"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeliveredServiceDomain"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          },
          "422": {
            "description": "Unable to validate deliveredServiceEntity"
          }
        }
      }
    },
    "/cross_report_agency": {
      "get": {
        "tags": [
          "cross_report_agency"
        ],
        "summary": "Get all the agencyName and agencyType for the countyCode",
        "description": "",
        "operationId": "get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "countyId",
            "in": "query",
            "description": "The county id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GovernmentOrganization"
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/dora/{index}/_search": {
      "post": {
        "tags": [
          "dora"
        ],
        "summary": "Query ElasticSearch Persons on given search terms",
        "description": "",
        "operationId": "searchIndex",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "index",
            "in": "path",
            "description": "The index of the search",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/JSONObject"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/hoi_cases": {
      "post": {
        "tags": [
          "hoi_cases"
        ],
        "summary": "Find cases history of involvement by clientId",
        "description": "",
        "operationId": "post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "clientIds",
            "description": "List of Client Id-s",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HOIRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HOICase"
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/hoi_referrals": {
      "post": {
        "tags": [
          "hoi_referrals"
        ],
        "summary": "Find referrals history of involvement by clientId",
        "description": "",
        "operationId": "post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "clientIds",
            "description": "List of Client Id-s",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HOIRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HOIReferral"
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/hoi_screenings": {
      "post": {
        "tags": [
          "hoi_screenings"
        ],
        "summary": "Find history of involvement by screening id",
        "description": "",
        "operationId": "post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "clientIds",
            "description": "List of Client Id-s",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HOIRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/HOIScreeningResponse"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/investigations/{id}": {
      "get": {
        "tags": [
          "investigations"
        ],
        "summary": "Find Investigation",
        "description": "",
        "operationId": "find",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The CMS Id of the Case or Referral ",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Investigation"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          }
        }
      }
    },
    "/investigations/{id}/allegations": {
      "get": {
        "tags": [
          "investigations"
        ],
        "summary": "Find allegations of investigation",
        "description": "",
        "operationId": "find",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The CMS Id of the Case or Referral",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AllegationList"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          }
        }
      },
      "post": {
        "tags": [
          "investigations"
        ],
        "summary": "Create allegation",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The CMS id of the Referral or Case",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Allegation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Allegation"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          },
          "422": {
            "description": "Unable to validate allegation"
          }
        }
      }
    },
    "/investigations/{id}/allegations/{allegation_id}": {
      "put": {
        "tags": [
          "investigations"
        ],
        "summary": "Update an allegation",
        "description": "",
        "operationId": "update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The CMS Id of the Referral or Case ",
            "required": true,
            "type": "string"
          },
          {
            "name": "allegation_id",
            "in": "path",
            "description": "The CMS Id of the Allegation",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Allegation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Allegation"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          },
          "422": {
            "description": "Unable to validate allegation"
          }
        }
      }
    },
    "/investigations/{id}/contacts": {
      "get": {
        "tags": [
          "investigations"
        ],
        "summary": "Create Contacts",
        "description": "",
        "operationId": "findAll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Referral ",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Contact"
              }
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          },
          "422": {
            "description": "Unable to validate Contacts"
          }
        }
      },
      "post": {
        "tags": [
          "investigations"
        ],
        "summary": "Create deliveredService",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Referral ",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContactRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          },
          "422": {
            "description": "Unable to validate deliveredServiceEntity"
          }
        }
      }
    },
    "/investigations/{id}/contacts/{contact_id}": {
      "get": {
        "tags": [
          "investigations"
        ],
        "summary": "Create deliveredService",
        "description": "",
        "operationId": "find",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Referral ",
            "required": true,
            "type": "string"
          },
          {
            "name": "contact_id",
            "in": "path",
            "description": "The id of the Contact",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          }
        }
      },
      "put": {
        "tags": [
          "investigations"
        ],
        "summary": "Create deliveredService",
        "description": "",
        "operationId": "update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Referral ",
            "required": true,
            "type": "string"
          },
          {
            "name": "contact_id",
            "in": "path",
            "description": "The id of the Contact",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContactRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          },
          "422": {
            "description": "Unable to validate deliveredServiceEntity"
          }
        }
      }
    },
    "/investigations/{id}/cross_report": {
      "get": {
        "tags": [
          "investigations"
        ],
        "summary": "Find cross reports of investigation",
        "description": "",
        "operationId": "find",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The CMS Id of the Case or Referral",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CrossReportList"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          }
        }
      },
      "post": {
        "tags": [
          "investigations"
        ],
        "summary": "Create Cross Report",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The CMS id of the Referral or Case",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CrossReport"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CrossReport"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          },
          "422": {
            "description": "Unable to validate cross report"
          }
        }
      }
    },
    "/investigations/{id}/cross_report/{crossreport_id}": {
      "put": {
        "tags": [
          "investigations"
        ],
        "summary": "Update a cross report",
        "description": "",
        "operationId": "update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The CMS Id of the Referral or Case ",
            "required": true,
            "type": "string"
          },
          {
            "name": "crossreport_id",
            "in": "path",
            "description": "The CMS Id of the Cross Report",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CrossReport"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CrossReport"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          },
          "422": {
            "description": "Unable to validate cross report"
          }
        }
      }
    },
    "/investigations/{id}/history_of_involvements": {
      "get": {
        "tags": [
          "investigations"
        ],
        "summary": "Find History Of Involvements by Referral/Case Id",
        "description": "",
        "operationId": "find",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Referral ",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/InvolvementHistory"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          }
        }
      }
    },
    "/investigations/{id}/people": {
      "get": {
        "tags": [
          "investigations"
        ],
        "summary": "Find people of investigation",
        "description": "",
        "operationId": "find",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The CMS Id of the Case or Referral ",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/People"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          }
        }
      }
    },
    "/investigations/{id}/relationships": {
      "get": {
        "tags": [
          "investigations"
        ],
        "summary": "Find relationships of an Investigation",
        "description": "",
        "operationId": "find",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The CMS Id of the Case or Referral ",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RelationshipList"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          }
        }
      }
    },
    "/investigations/{id}/safety_alerts": {
      "get": {
        "tags": [
          "investigations"
        ],
        "summary": "Find safety alerts of investigation",
        "description": "",
        "operationId": "find",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The CMS Id of the Case or Referral",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SafetyAlerts"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          }
        }
      },
      "post": {
        "tags": [
          "investigations"
        ],
        "summary": "Create safety alerts",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The CMS id of the Referral or Case",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SafetyAlerts"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SafetyAlerts"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          },
          "422": {
            "description": "Unable to validate safety_alerts"
          }
        }
      }
    },
    "/investigations/{id}/screening": {
      "get": {
        "tags": [
          "investigations"
        ],
        "summary": "Find Screening Summary by Referral Id",
        "description": "",
        "operationId": "find",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Referral ",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ScreeningSummary"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          }
        }
      }
    },
    "/lov": {
      "get": {
        "tags": [
          "lov"
        ],
        "summary": "Query ElasticSearch Persons on given search terms",
        "description": "",
        "operationId": "getAll",
        "consumes": [
          "text/plain"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/nsIntakeLovEntry"
              }
            }
          },
          "400": {
            "description": "Unable to parse parameters"
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/participants": {
      "post": {
        "tags": [
          "participants"
        ],
        "summary": "Create Participant",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Participant"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Participant"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          },
          "422": {
            "description": "Unable to validate Participant"
          }
        }
      }
    },
    "/people": {
      "post": {
        "tags": [
          "people"
        ],
        "summary": "Create Person",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Person"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Person"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          },
          "422": {
            "description": "Unable to validate Person"
          }
        }
      }
    },
    "/people/{id}": {
      "get": {
        "tags": [
          "people"
        ],
        "summary": "Find person by id",
        "description": "",
        "operationId": "get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Person to find",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Person"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "put": {
        "tags": [
          "people"
        ],
        "summary": "Update Person",
        "description": "",
        "operationId": "update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the person to update",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "personRequest",
            "description": "The person request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Person"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Person"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "not found"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "422": {
            "description": "Unable to validate Person"
          }
        }
      }
    },
    "/referrals": {
      "post": {
        "tags": [
          "referrals"
        ],
        "summary": "Create Referral from Screening",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScreeningToReferral"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PostedScreeningToReferral"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          },
          "422": {
            "description": "Unable to validate ScreeningToReferral"
          }
        }
      }
    },
    "/referrals/{id}": {
      "get": {
        "tags": [
          "referrals"
        ],
        "summary": "Find referral by id",
        "description": "",
        "operationId": "get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Referral to find",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PostedScreeningToReferral"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/relationships": {
      "post": {
        "tags": [
          "relationships"
        ],
        "summary": "Create Client Relationship",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClientRelationship"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PostedClientRelationship"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          },
          "422": {
            "description": "Unable to validate Client Relationship"
          }
        }
      }
    },
    "/relationships/{id}": {
      "get": {
        "tags": [
          "relationships"
        ],
        "summary": "Find Client Relationship by id",
        "description": "",
        "operationId": "get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Client Relationship to find",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PostedClientRelationship"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/screenings": {
      "post": {
        "tags": [
          "screenings"
        ],
        "summary": "Creates a new screening",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The screening request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Screening"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Screening"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "409": {
            "description": "Conflict - already exists"
          },
          "422": {
            "description": "Unable to validate Screening"
          }
        }
      }
    },
    "/screenings/{id}": {
      "put": {
        "tags": [
          "screenings"
        ],
        "summary": "Update Screening",
        "description": "",
        "operationId": "update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Screening to update",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The screening request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Screening"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Screening"
            }
          },
          "400": {
            "description": "Unable to process JSON"
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Accept Header not supported"
          },
          "422": {
            "description": "Unable to validate Screening"
          }
        }
      }
    },
    "/screenings/{id}/history_of_involvements": {
      "get": {
        "tags": [
          "screenings"
        ],
        "summary": "Find history of involvement by screening id",
        "description": "",
        "operationId": "get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Screening",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/InvolvementHistory"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/staffpersons/{id}": {
      "get": {
        "tags": [
          "staffpersons"
        ],
        "summary": "Find staffperson by id",
        "description": "",
        "operationId": "get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the StaffPerson to find",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PostedStaffPerson"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/forms/instances": {
      "post": {
        "tags": [
          "forms-instances"
        ],
        "summary": "Creates and returns Form Instance",
        "description": "",
        "operationId": "createFormInstance",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "form",
            "description": "The Form object",
            "required": false,
            "schema": {
              "$ref": "#/definitions/FormInstanceDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FormInstanceDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/forms/instances/{formName}": {
      "get": {
        "tags": [
          "forms-instances"
        ],
        "summary": "Returns All available Form Instances for name",
        "description": "",
        "operationId": "getAllForms",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "formName",
            "in": "path",
            "description": "Form Name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FormCollectionDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/forms/instances/{formName}/{formId}": {
      "get": {
        "tags": [
          "forms-instances"
        ],
        "summary": "Returns Form by name and Id",
        "description": "",
        "operationId": "getForm",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "formName",
            "in": "path",
            "description": "Form Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "formId",
            "in": "path",
            "description": "Form Instance Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FormInstanceDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "put": {
        "tags": [
          "forms-instances"
        ],
        "summary": "Updates Form Schema",
        "description": "",
        "operationId": "updateForm",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "formName",
            "in": "path",
            "description": "Form Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "formId",
            "in": "path",
            "description": "Form Instance Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "form",
            "description": "The Form object",
            "required": false,
            "schema": {
              "$ref": "#/definitions/FormInstanceDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FormInstanceDTO"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "delete": {
        "tags": [
          "forms-instances"
        ],
        "summary": "Delete Form Instance",
        "description": "",
        "operationId": "deleteForm",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "formName",
            "in": "path",
            "description": "Form Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "formId",
            "in": "path",
            "description": "Form Instance Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FormInstanceDTO"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/forms/instances/{formName}/{formId}/status": {
      "put": {
        "tags": [
          "forms-instances"
        ],
        "summary": "Updates Form Status",
        "description": "",
        "operationId": "updateFormInstanceStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "formName",
            "in": "path",
            "description": "Form Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "formId",
            "in": "path",
            "description": "Form Instance Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "status",
            "description": "Form Instance Status",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FormInstanceStatusDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FormInstanceStatusDTO"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/forms/packages": {
      "get": {
        "tags": [
          "forms-packages"
        ],
        "summary": "Returns Forms Packages",
        "description": "",
        "operationId": "getFormsPackages",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "extId",
            "in": "query",
            "description": "External entity Id",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Package Status",
            "required": false,
            "type": "string",
            "enum": [
              "SUBMITTED",
              "INPROGRESS"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FormsPackageCollectionDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "post": {
        "tags": [
          "forms-packages"
        ],
        "summary": "Creates and returns Forms Package",
        "description": "",
        "operationId": "createFormsPackage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "formsPackage",
            "description": "The FormSchema object",
            "required": false,
            "schema": {
              "$ref": "#/definitions/FormsPackageDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FormsPackageDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/forms/packages/{formId}": {
      "put": {
        "tags": [
          "forms-packages"
        ],
        "summary": "Updates Forms Package",
        "description": "",
        "operationId": "updateFormsPackage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "description": "Forms Package Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "formsPackage",
            "description": "The Forms Package object",
            "required": false,
            "schema": {
              "$ref": "#/definitions/FormsPackageDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FormsPackageDTO"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/forms/schemas": {
      "get": {
        "tags": [
          "forms-schemas"
        ],
        "summary": "Returns All available Form Schemas",
        "description": "",
        "operationId": "getAllFormsSchemas",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FormSchemaCollectionDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "post": {
        "tags": [
          "forms-schemas"
        ],
        "summary": "Creates and returns Form Schema",
        "description": "",
        "operationId": "createFormSchema",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "formSchema",
            "description": "The FormSchema object",
            "required": false,
            "schema": {
              "$ref": "#/definitions/FormSchemaDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FormSchemaDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Not Authorized"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/forms/schemas/{formName}/{schemaVersion}": {
      "get": {
        "tags": [
          "forms-schemas"
        ],
        "summary": "Returns Form Schema by form name and schema version",
        "description": "",
        "operationId": "getFormSchemaByNameAndVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "formName",
            "in": "path",
            "description": "Form name",
            "required": true,
            "type": "string"
          },
          {
            "name": "schemaVersion",
            "in": "path",
            "description": "Form Schema version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FormSchemaDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    },
    "/forms/schemas/{formSchemaId}": {
      "get": {
        "tags": [
          "forms-schemas"
        ],
        "summary": "Returns Form Schema by Id",
        "description": "",
        "operationId": "getFormSchema",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "formSchemaId",
            "in": "path",
            "description": "Form Schema Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FormSchemaDTO"
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "put": {
        "tags": [
          "forms-schemas"
        ],
        "summary": "Updates Form Schema",
        "description": "",
        "operationId": "updateFormSchema",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "formSchemaId",
            "in": "path",
            "description": "Form Schema Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "form",
            "description": "The Form object",
            "required": false,
            "schema": {
              "$ref": "#/definitions/FormSchemaDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FormSchemaDTO"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      },
      "delete": {
        "tags": [
          "forms-schemas"
        ],
        "summary": "Delete Form Schema",
        "description": "",
        "operationId": "deleteFormSchema",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "formSchemaId",
            "in": "path",
            "description": "Form Schema Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FormSchemaDTO"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Not Authorized"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Accept Header not supported"
          }
        }
      }
    }
  }
}
